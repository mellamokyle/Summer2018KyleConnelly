(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    178480,       3491]
NotebookOptionsPosition[    159840,       3115]
NotebookOutlinePosition[    173314,       3410]
CellTagsIndexPosition[    173271,       3407]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Chaotic Compass", "Title",
 CellChangeTimes->{{3.700774153171832*^9, 3.700774159196458*^9}, {
  3.716902403353675*^9, 3.716902404538095*^9}, {3.739215898394249*^9, 
  3.739215901168655*^9}},ExpressionUUID->"755e0098-9782-4df5-8299-\
7f54266c54d6"],

Cell["\<\
A simple experiment with results that are anything but simple.\
\>", "Abstract",
 CellChangeTimes->{{3.700774172671139*^9, 3.700774220850109*^9}, {
   3.700778895632181*^9, 3.700778896308676*^9}, {3.716902409622859*^9, 
   3.7169024154226503`*^9}, 3.7354828213821573`*^9, {3.73548464781948*^9, 
   3.735484648712131*^9}, {3.735587270504136*^9, 3.735587272381384*^9}, {
   3.739215904872504*^9, 
   3.739215920016264*^9}},ExpressionUUID->"db4efd27-b72d-4835-a486-\
b18956bba0cb"],

Cell["Kyle Connelly, Jun. 29,  2018", "AuthorInfo",
 CellChangeTimes->{{3.7360942820567207`*^9, 3.736094285334813*^9}, {
  3.736098860672957*^9, 3.7360988944763517`*^9}, {3.7360990983398457`*^9, 
  3.736099107824772*^9}, {3.736099251923992*^9, 3.7360993016054573`*^9}, {
  3.7368685297868023`*^9, 3.736868530751481*^9}, {3.736868726576907*^9, 
  3.7368687285334053`*^9}, {3.7368690514137907`*^9, 3.736869059546919*^9}, {
  3.736869099634509*^9, 3.73686915397053*^9}, {3.739215929711547*^9, 
  3.739215945821363*^9}},ExpressionUUID->"59a63784-4e95-46b9-9a1d-\
2c013f47161b"],

Cell["", "Text",ExpressionUUID->"85271f44-5b04-421c-bf31-0395fab10c35"],

Cell["\<\
Some exceedingly simple physical systems can give rise to complex, chaotic \
motion. Here we will investigate a very simple system, a compass in a \
changing magnetic field. As we will see, the resulting motion is chaotic, and \
changes wildly from small changes to the system.\
\>", "Text",
 CellChangeTimes->{{3.700774312865305*^9, 3.700774350341485*^9}, 
   3.716902427754265*^9, 3.7354828504054613`*^9, {3.735483653472313*^9, 
   3.735483683917967*^9}, {3.7354849519274273`*^9, 3.735484958639419*^9}, {
   3.7355873998710403`*^9, 3.73558761257386*^9}, {3.736099062603284*^9, 
   3.736099062938388*^9}, 3.738588402126446*^9, {3.738588473865753*^9, 
   3.738588479696198*^9}, {3.738588515044569*^9, 3.738588515882841*^9}, 
   3.7392160885147057`*^9, {3.739216137523655*^9, 3.739216178389409*^9}, {
   3.7392162310146027`*^9, 
   3.739216328766818*^9}},ExpressionUUID->"bdc94ae3-2c9e-4f83-adb5-\
7aba501cbe90"],

Cell[CellGroupData[{

Cell["The Setup", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739216336614266*^9, 
   3.73921633938225*^9}},ExpressionUUID->"35feb7e4-4e93-4e64-abc0-\
7b0b86e8128f"],

Cell["\<\
A compass is a simple object that we all know; it points north. This is \
because compasses align with magnetic fields, and the Earth has a magnetic \
field pointing from the South Pole to the North Pole.\
\>", "Text",
 CellChangeTimes->{{3.739214040717538*^9, 3.7392140501397953`*^9}, {
  3.7392166069333973`*^9, 
  3.7392167144219*^9}},ExpressionUUID->"55301b49-a91a-4c0d-9758-8f5b81888f70"],

Cell["\<\
But the Earth isn\[CloseCurlyQuote]t the only object with a magnetic field. \
Any wire carrying an electric current generates a magnetic field around it. \
\>", "Text",
 CellChangeTimes->{{3.7392168290385227`*^9, 3.739216868501259*^9}, {
  3.7392168998877296`*^9, 
  3.7392169010715113`*^9}},ExpressionUUID->"cbb6bce3-b71b-473d-807b-\
6a28ac475798"],

Cell["\<\
Despite how simple a compass may seem, it can be made to move in complex \
ways. Consider placing a compass in a magnetic field that oscillates back and \
forth in one direction.\
\>", "Text",
 CellChangeTimes->{{3.739216761453904*^9, 3.739216799650344*^9}, {
  3.739216911341671*^9, 3.739216926608758*^9}, {3.739216960630375*^9, 
  3.73921697573403*^9}},ExpressionUUID->"54a61606-998c-4a61-8c71-\
df748f679360"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Manipulate", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Thick", ",", " ", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", ".9"}], 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
                RowBox[{
                 RowBox[{"-", ".9"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{".9", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
                RowBox[{".9", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
            "]"}], ",", " ", 
           RowBox[{"Circle", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], ",", " ", 
         "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", 
          RowBox[{"Apply", "[", 
           RowBox[{"Arrow", ",", "\n", "\t\t\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", ".75"}], "+", "i"}], ",", " ", 
                   RowBox[{
                    RowBox[{"-", ".5"}], 
                    RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", ".75"}], "+", "i"}], ",", " ", 
                   RowBox[{".5", 
                    RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], "}"}], "}"}],
               ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "0", ",", " ", "1.5", ",", " ", ".5"}], 
               "}"}]}], "]"}], ",", " ", 
            RowBox[{"{", "1", "}"}]}], "]"}]}], "}"}], "]"}]}], 
      RowBox[{"(*", 
       RowBox[{",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"ParametricPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", ".2"}], 
              RowBox[{"Sin", "[", 
               RowBox[{"l", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "t", "]"}]}], "]"}]}], ",", " ", 
             RowBox[{".2", 
              RowBox[{"Cos", "[", 
               RowBox[{"l", " ", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Sin", "[", "t", "]"}]}], "]"}]}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"l", ",", " ", "0", ",", " ", "3"}], "}"}]}], "]"}], "\n",
          "\t\t\t", "/.", 
         RowBox[{
          RowBox[{"Line", "[", "x_", "]"}], " ", ":>", " ", 
          RowBox[{"Sequence", "[", 
           RowBox[{"Arrow", "[", "x", "]"}], "]"}]}]}]}], "*)"}], "\n", 
      "\t\t", "]"}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", 
         RowBox[{"Pi", "/", "4"}]}], "}"}], ",", " ", ".0001", ",", " ", 
       RowBox[{"2", " ", "Pi"}]}], "}"}]}], "\n", "\t", "]"}], ",", "\n", 
   "\t", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Code",
 CellChangeTimes->{{3.739284037038945*^9, 3.7392840411552277`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"1dd30e8b-7542-46b3-adb7-733b69d92bda"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2 Pi}}, Typeset`size$$ = {
    405., {223., 229.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$28209$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$28209$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Manipulate[
        Show[
         Graphics[{Thick, 
           
           Arrow[{{(-0.9) Sin[$CellContext`\[Theta]], (-0.9) 
              Cos[$CellContext`\[Theta]]}, {
             0.9 Sin[$CellContext`\[Theta]], 0.9 
              Cos[$CellContext`\[Theta]]}}], 
           Circle[{0, 0}]}, PlotRange -> {{-1.1, 1.1}, {-1.1, 1.1}}], 
         Graphics[{Blue, 
           Apply[Arrow, 
            
            Table[{{{-0.75 + $CellContext`i, (-0.5) 
                Sin[$CellContext`t$$]}, {-0.75 + $CellContext`i, 0.5 
                Sin[$CellContext`t$$]}}}, {$CellContext`i, 0, 1.5, 0.5}], {
            1}]}]], {{$CellContext`\[Theta], Pi/4}, 0.0001, 2 Pi}], 
      "Specifications" :> {{$CellContext`t$$, 0, 2 Pi, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{450., {260., 266.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.739213985508587*^9, {3.7392684871703653`*^9, 3.7392684876811047`*^9}, 
   3.739273544247072*^9, 3.739283776565477*^9, 3.7392840482024183`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"32242772-cc87-49b4-8b80-d717cf45d95b"]
}, {2}]],

Cell["\<\
In this illustration the black arrow is the compass needle, and the blue \
arrows represent the magnetic field. Right now the compass is not responding \
to the field; let\[CloseCurlyQuote]s figure out how it should move.\
\>", "Text",
 CellChangeTimes->{{3.7392671496578197`*^9, 
  3.739267215888887*^9}},ExpressionUUID->"fe5d42d4-a931-4300-8c6b-\
26c8bb9d024a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Physics", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7392672314235983`*^9, 
   3.739267238644216*^9}},ExpressionUUID->"bad39a97-def0-463d-bae9-\
7657a326aba0"],

Cell[TextData[{
 "The magnetic field exerts a torque on the compass needle. This torque \
\[Tau] is equal to the product of the magnetic field strength \
\[ScriptCapitalB]",
 StyleBox[", ",
  FontSlant->"Italic"],
 "the magnetic dipole moment of the compass needle \[Mu], and the sine of the \
angle between the two \[Theta]:"
}], "Text",
 CellChangeTimes->{{3.7392176484217253`*^9, 3.7392176486722717`*^9}, {
  3.739217696288169*^9, 3.739217736597221*^9}, {3.739217779445529*^9, 
  3.7392179521569023`*^9}},ExpressionUUID->"64f683cc-ca5b-43f2-b98b-\
8cae03f3b9b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Tau]", " ", "=", " ", 
  RowBox[{"\[ScriptCapitalB]", " ", "\[Mu]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.739217978227507*^9, 3.739218007393628*^9}, {
  3.739218175435136*^9, 3.739218175529647*^9}, {3.739218347995947*^9, 
  3.739218348189144*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"33036e05-d1de-4ddd-81e8-0a4a13158b9d"],

Cell[BoxData[
 RowBox[{"\[ScriptCapitalB]", " ", "\[Mu]", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.739218097126258*^9, 3.739218177388071*^9, 
  3.739218349852384*^9, 3.739220171274431*^9, 3.739267251885241*^9, 
  3.739268545550803*^9, 3.739283777895089*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"116d9ba1-6832-4a33-9f65-c93d6f19910c"]
}, Open  ]],

Cell["\<\
The red arrow in the animation below represents the torque. You can see that \
it is strongest when the compass needle is perpendicular to the field, and is \
stronger when the magnetic field is stronger:\
\>", "Text",
 CellChangeTimes->{{3.73921859034788*^9, 3.739218665820997*^9}, {
  3.739268000843089*^9, 
  3.739268015809003*^9}},ExpressionUUID->"aaa8771b-5bb1-440c-9245-\
f84f1e9cb3ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Manipulate", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Thick", ",", " ", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", ".9"}], 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
                RowBox[{
                 RowBox[{"-", ".9"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{".9", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
                RowBox[{".9", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}], "}"}], 
            "]"}], ",", " ", 
           RowBox[{"Circle", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], ",", " ", 
         "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", 
          RowBox[{"Apply", "[", 
           RowBox[{"Arrow", ",", "\n", "\t\t\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", ".75"}], "+", "i"}], ",", " ", 
                   RowBox[{
                    RowBox[{"-", ".5"}], 
                    RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", ".75"}], "+", "i"}], ",", " ", 
                   RowBox[{".5", 
                    RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], "}"}], "}"}],
               ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "0", ",", " ", "1.5", ",", " ", ".5"}], 
               "}"}]}], "]"}], ",", " ", 
            RowBox[{"{", "1", "}"}]}], "]"}]}], "}"}], "]"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", ".2"}], 
             RowBox[{"Sin", "[", 
              RowBox[{"l", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               RowBox[{"Sin", "[", "t", "]"}]}], "]"}]}], ",", " ", 
            RowBox[{".2", 
             RowBox[{"Cos", "[", 
              RowBox[{"l", " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               RowBox[{"Sin", "[", "t", "]"}]}], "]"}]}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"l", ",", " ", "0", ",", " ", "3"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}]}], "]"}], "\n", 
        "\t\t\t", "/.", 
        RowBox[{
         RowBox[{"Line", "[", "x_", "]"}], " ", ":>", " ", 
         RowBox[{"Sequence", "[", 
          RowBox[{"Arrow", "[", "x", "]"}], "]"}]}]}]}], "\n", "\t\t", "]"}], 
     ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", " ", 
         RowBox[{"Pi", "/", "4"}]}], "}"}], ",", " ", ".0001", ",", " ", 
       RowBox[{"2", " ", "Pi"}]}], "}"}]}], "\n", "\t", "]"}], ",", "\n", 
   "\t", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Code",
 CellChangeTimes->{{3.739214118901661*^9, 3.739214120707712*^9}, {
  3.739267853426434*^9, 3.739267861047906*^9}, {3.739284063114284*^9, 
  3.7392840673224077`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"2c79f975-3db6-4ee3-bee4-ab8fcf8c9704"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2 Pi}}, Typeset`size$$ = {
    405., {223., 229.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$28253$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$28253$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Manipulate[
        Show[
         Graphics[{Thick, 
           
           Arrow[{{(-0.9) Sin[$CellContext`\[Theta]], (-0.9) 
              Cos[$CellContext`\[Theta]]}, {
             0.9 Sin[$CellContext`\[Theta]], 0.9 
              Cos[$CellContext`\[Theta]]}}], 
           Circle[{0, 0}]}, PlotRange -> {{-1.1, 1.1}, {-1.1, 1.1}}], 
         Graphics[{Blue, 
           Apply[Arrow, 
            
            Table[{{{-0.75 + $CellContext`i, (-0.5) 
                Sin[$CellContext`t$$]}, {-0.75 + $CellContext`i, 0.5 
                Sin[$CellContext`t$$]}}}, {$CellContext`i, 0, 1.5, 0.5}], {
            1}]}], 
         ReplaceAll[
          
          ParametricPlot[{(-0.2) 
            Sin[$CellContext`l Sin[$CellContext`\[Theta]] 
              Sin[$CellContext`t$$]], 0.2 
            Cos[$CellContext`l Sin[$CellContext`\[Theta]] 
              Sin[$CellContext`t$$]]}, {$CellContext`l, 0, 3}, PlotStyle -> 
           Red], Line[
            Pattern[$CellContext`x, 
             Blank[]]] :> Sequence[
            Arrow[$CellContext`x]]]], {{$CellContext`\[Theta], Pi/4}, 0.0001, 
         2 Pi}], "Specifications" :> {{$CellContext`t$$, 0, 2 Pi, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{450., {260., 266.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.739214121731653*^9, 3.739267862820755*^9, 
  3.739268496303112*^9, 3.7392735445975523`*^9, 3.7392837768364897`*^9, 
  3.73928406910184*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"bf889828-b577-4376-8734-cc7741f8c90b"]
}, {2}]],

Cell["\<\
But we still need the math. Since the magnetic field is changing, the field \
strength \[ScriptCapitalB] will change. We can express \[ScriptCapitalB] as \
the product of a base strength B, and a sine function that changes in time, \
with frequency \[Omega]:\
\>", "Text",
 CellChangeTimes->{{3.739218182281128*^9, 3.7392182639874897`*^9}, {
  3.7392680312753143`*^9, 
  3.7392680386190357`*^9}},ExpressionUUID->"0e384fa0-deda-4be8-9713-\
8b5e655bc05a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Tau]", " ", "=", " ", 
  RowBox[{"\[Tau]", "/.", 
   RowBox[{"\[ScriptCapitalB]", " ", "\[Rule]", " ", 
    RowBox[{"B", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.739218282541437*^9, 3.739218329014615*^9}, {
  3.7392183977764063`*^9, 3.739218400168275*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"360b0271-161e-449d-bc43-ba7bc939d766"],

Cell[BoxData[
 RowBox[{"B", " ", "\[Mu]", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"t", " ", "\[Omega]"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.739218330387246*^9, 3.739218353002993*^9}, 
   3.7392184015143957`*^9, 3.739220188397046*^9, 3.739268550357209*^9, 
   3.7392837862995443`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"09c6af5e-92f3-4221-9a6f-0a87f23bc73b"]
}, Open  ]],

Cell["\<\
This torque causes the angle of the compass needle to change. In particular, \
the torque \[Tau] divided by the square of the needle\[CloseCurlyQuote]s \
moment of inertia \[ScriptCapitalI], equals the second derivative of the \
angle:\
\>", "Text",
 CellChangeTimes->{{3.739217942211787*^9, 3.739217959392913*^9}, {
  3.739218014857335*^9, 
  3.739218091141492*^9}},ExpressionUUID->"5b14f74d-3f0d-4552-b969-\
173477823ec1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
  FractionBox["\[Tau]", 
   SuperscriptBox["\[ScriptCapitalI]", "2"]]}]], "Input",
 CellChangeTimes->{{3.7392183410225163`*^9, 3.739218386954011*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"bba2132c-7c83-4101-9182-b2b5132d594c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  FractionBox[
   RowBox[{"B", " ", "\[Mu]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", " ", "\[Omega]"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], 
   SuperscriptBox["\[ScriptCapitalI]", "2"]]}]], "Output",
 CellChangeTimes->{{3.7392183880283537`*^9, 3.739218405161031*^9}, 
   3.739220192279769*^9, 3.7392685533863497`*^9, 3.739283797287232*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"8e82a016-0668-4168-bd60-87c9db92f5e8"]
}, Open  ]],

Cell[TextData[{
 "Since B, \[Mu], and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ScriptCapitalI]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ec453797-45b5-4f4d-a24c-6c40e8454141"],
 " are all constants, we can simply write their product as \[Beta]:"
}], "Text",
 CellChangeTimes->{{3.739218419516344*^9, 3.7392184554105053`*^9}, {
  3.7392680632414007`*^9, 
  3.7392680634038258`*^9}},ExpressionUUID->"d8975730-2141-4fa3-af71-\
bccb9636cc55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqnMotion", " ", "=", " ", 
  RowBox[{"%", "/.", 
   RowBox[{
    FractionBox[
     RowBox[{"B", " ", "\[Mu]"}], 
     SuperscriptBox["\[ScriptCapitalI]", "2"]], " ", "\[Rule]", " ", 
    "\[Beta]"}]}]}]], "Input",
 CellChangeTimes->{{3.739218465884527*^9, 3.7392184928070602`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"d3afd278-ef01-4432-b91c-5d43bf665cc3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"\[Beta]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"t", " ", "\[Omega]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7392685563290577`*^9, 3.739283802151535*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"5abd324d-9958-4d9e-8ed8-48c77465dfab"]
}, Open  ]],

Cell["\<\
This is a differential equation that we can solve to determine the motion of \
the compass.\
\>", "Text",
 CellChangeTimes->{{3.739218694503347*^9, 3.7392187458002977`*^9}, {
  3.739218777302875*^9, 
  3.73921879641749*^9}},ExpressionUUID->"41ff0604-6dfa-482f-9fc6-\
d865dddc9721"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Motion", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.735483919282419*^9, 3.735483930584803*^9}, {
   3.735486467547221*^9, 3.7354864678234043`*^9}, {3.7355877724233932`*^9, 
   3.73558779245604*^9}, {3.73609433900439*^9, 3.736094368339192*^9}, 
   3.7360944021880836`*^9, {3.739218865247077*^9, 3.739218865976742*^9}, {
   3.739268077713022*^9, 
   3.739268078017061*^9}},ExpressionUUID->"69c2789e-757d-42de-8e7a-\
aa67a7c35b9d"],

Cell["\<\
For many differential equations in physics, it is possible to write down a \
general solution, valid in all cases. As it turns out, this equation is not \
nice like that. It is not possible to write down a general equation for its \
solution. However, a particular solution can be found numerically for some \
specific initial conditions:\
\>", "Text",
 CellChangeTimes->{{3.73926809957771*^9, 3.739268121145173*^9}, {
  3.739268339221072*^9, 3.739268407312945*^9}, {3.7392694323903227`*^9, 
  3.739269451105687*^9}},ExpressionUUID->"31729641-3f35-4443-b72f-\
d245bff12cb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"partSoln", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"eqnMotion", " ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]", " ", "\[Rule]", " ", "6.3"}], ",", " ", 
          RowBox[{"\[Omega]", " ", "\[Rule]", " ", "1.4"}]}], "}"}]}], ")"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "0", "]"}], " ", "\[Equal]", " ", 
       RowBox[{"Pi", "/", "4"}]}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], " ", "\[Equal]", " ", 
       "0"}]}], "}"}], ",", " ", 
    RowBox[{"\[Theta]", "[", "t", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.73926843130827*^9, 3.739268443090114*^9}, {
  3.739268568496232*^9, 3.739268660231578*^9}, {3.739268871062059*^9, 
  3.739268873829219*^9}, {3.7392724157785482`*^9, 3.739272420089387*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"93ccc738-1113-4c67-a597-1ef0e5f729b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4YLURU+yHpPzd0wYnD
3cQ//pdozs5G6T/SUFjDa77VP7gHnfPLbuo/IqE47Akn4D9wzxZgNmntP9Wb
k3tZVOU/tNR1YAiL8T+7wbiC/fHqP4MTMpKwxPY/gEqXStgX8D+TWeWFeyj+
P7tJtw/c7vI/BXHeSg11BEDziT6Xnbj1P1UMgAFZiwpA2iBupGZS+D8fIZ7q
BQUQQFrNgu1ZJPs/CYSxwsmJEkCJ0D+8VMb9P71608kjahRAWwqypoYtAEBB
RrErJPEVQD63Ng34kwFA98/Y+MVvF0B4j482beICQNb4gXxazRhAf/LaffdM
BECG6PlA+EcaQAX2WabgsAVArCP4hZ+jG0DiJK2RzfwGQP8trBwSqhxAjN7y
ms9kCEALCClriFQdQI3DDGfVtAlAoW8wF+FoHUBbMxlR8CALQJmmyNb52BxA
p0NZHGqGDEBZrf82rq8bQEt/barn0w1AjlB4/6k1GkC8RXRWej0PQJWWHwmy
cBhAwpunYohHEECBoJoMvdwWQOXkrgoD7RBA91nXW2uAFUBvc69BiKARQDKg
x5KDOBRApRcaWg9IEkAuUV3rhRkTQEEBfgGh/RJAV0/PHAPLEUAcu3sZ4q8T
QL4FepjxQBBAoorjEiVWFEDecTNCLwkNQI+fRJtyChVAMh3vvh3LCEAoyg8F
wrIVQKAXWo4K4gRAAMV038BXFkAFK6trca0BQD4F00jKChdAELdWXYS8/j8o
W5uT1bEXQEGG5cld8fw/ePZcbetmGED0fdYhUaL9P3SniCgDEBlATMyiKaQx
AECvKE5UyrUZQJPbii7/RAJAUe8MD5xpGkCMmcMqSvsEQJ/LNatvERtA4QiY
OiGoB0BT7VfWTccbQMFaGqzVjwpAR98Tctt5HECSlpRjiYMNQObmOe9qIB1A
cpPl7g5SEEDrM1n7BNUdQG2kzoejcRJAnJbi6KB9HkAxVgaKBAEVQIzJBUfs
Ih9Afaa5zkUGGEDiQSI0QtYfQA0mczcKeRtA8mdUAc0+IEB3qpux81geQKZR
FDB+mSBA/+VcafpnIEB6IyEXh/IgQECRI4rrUyFAJADj7pBFIUDx29Xa2wci
QIF/IQ6gnyFAx1LasS25IkC0CRUesPMhQP2CLCUXXCNAmjaFdcVOIkBjV/x4
NQskQJ9LQoUyqCJAi+wDfaqoJEB6a7SFoPsiQENJohT6GiVACC6jzRNWI0Bi
J3uMDF0lQGz7RgaIqiNA5NWn+GJUJUAyFFD6//8jQGnBBLqk/SRAiLihJQ==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$11711#1"]& ]}}, {}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 10.}, {0., 10.681736364396503`}}, 
                  PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4YLURU+yHpPzd0wYnD
3cQ//pdozs5G6T/SUFjDa77VP7gHnfPLbuo/IqE47Akn4D9wzxZgNmntP9Wb
k3tZVOU/tNR1YAiL8T+7wbiC/fHqP4MTMpKwxPY/gEqXStgX8D+TWeWFeyj+
P7tJtw/c7vI/BXHeSg11BEDziT6Xnbj1P1UMgAFZiwpA2iBupGZS+D8fIZ7q
BQUQQFrNgu1ZJPs/CYSxwsmJEkCJ0D+8VMb9P71608kjahRAWwqypoYtAEBB
RrErJPEVQD63Ng34kwFA98/Y+MVvF0B4j482beICQNb4gXxazRhAf/LaffdM
BECG6PlA+EcaQAX2WabgsAVArCP4hZ+jG0DiJK2RzfwGQP8trBwSqhxAjN7y
ms9kCEALCClriFQdQI3DDGfVtAlAoW8wF+FoHUBbMxlR8CALQJmmyNb52BxA
p0NZHGqGDEBZrf82rq8bQEt/barn0w1AjlB4/6k1GkC8RXRWej0PQJWWHwmy
cBhAwpunYohHEECBoJoMvdwWQOXkrgoD7RBA91nXW2uAFUBvc69BiKARQDKg
x5KDOBRApRcaWg9IEkAuUV3rhRkTQEEBfgGh/RJAV0/PHAPLEUAcu3sZ4q8T
QL4FepjxQBBAoorjEiVWFEDecTNCLwkNQI+fRJtyChVAMh3vvh3LCEAoyg8F
wrIVQKAXWo4K4gRAAMV038BXFkAFK6trca0BQD4F00jKChdAELdWXYS8/j8o
W5uT1bEXQEGG5cld8fw/ePZcbetmGED0fdYhUaL9P3SniCgDEBlATMyiKaQx
AECvKE5UyrUZQJPbii7/RAJAUe8MD5xpGkCMmcMqSvsEQJ/LNatvERtA4QiY
OiGoB0BT7VfWTccbQMFaGqzVjwpAR98Tctt5HECSlpRjiYMNQObmOe9qIB1A
cpPl7g5SEEDrM1n7BNUdQG2kzoejcRJAnJbi6KB9HkAxVgaKBAEVQIzJBUfs
Ih9Afaa5zkUGGEDiQSI0QtYfQA0mczcKeRtA8mdUAc0+IEB3qpux81geQKZR
FDB+mSBA/+VcafpnIEB6IyEXh/IgQECRI4rrUyFAJADj7pBFIUDx29Xa2wci
QIF/IQ6gnyFAx1LasS25IkC0CRUesPMhQP2CLCUXXCNAmjaFdcVOIkBjV/x4
NQskQJ9LQoUyqCJAi+wDfaqoJEB6a7SFoPsiQENJohT6GiVACC6jzRNWI0Bi
J3uMDF0lQGz7RgaIqiNA5NWn+GJUJUAyFFD6//8jQGnBBLqk/SRAiLihJQ==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$11711#1"]& ]}}, {}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 10.}, {0., 10.681736364396503`}}, 
                  PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 10.}}, {
       5, 7, 2, {317}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1: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
BB+jxXd/o/Df704X/wNR+T90
       "], {Developer`PackedArrayForm, CompressedData["
1:eJwl0wV3FgQYBeBvQ0opJ92jJt1Ix2jpRqQERHoC0iUSo7sZjBDpRpBOaVG6
OxSL7nw4vOc89wfce97QFhG1OwUFAoGS78LFIBZxiUdCQkhCclKRllAyEUY2
cpKH/BSiCMUpRTjlqUQVqlOLujSgEU1oTkta05YORNCFbvSkD/0ZyGAiGcFo
xjGRKUwnimjmsYBFLGUFq1nHBjaxlR3sZi8HOMzvHOMkZzjPJa5ygz/5m/+4
ywMe84yXvCFYtzGJw0ck4GMSk4yUpCE9GclCVnKQm3wUpDDFgt5vVYZyVORz
qlGTOtTnCxrTjBZ8TRva827wznxHD3rTj+8ZxFCGM4qxTGAy05jJbObyIwtZ
wnJWsZb1bGQL29nFr+znEEc4yglOc46LXOE6t7jNv9zhPo94ygteExQcCHxA
bD4kPon4hKSkIDXpyEBmPiU7uchLAT6jKCUoTVkqUJmq1KA29WjIlzTlK1rx
De3oyLd0pTu96MsAfmAIwxjJGMYzianMYBZzmM9PLGYZK1nDz/zCZraxkz3s
4yC/8QfHOcVZLnCZa9zkL/7hf+7xkCc851Xw++ePQSziEo+EhJCE5KQiLaFk
Ioxs5CQP+SlEEYpTinDKU4kqVKcWdWlAI5rQnJa0pi0diKAL3ehJH/ozkMFE
MoLRjGMiU5hOFNHMYwGLWMoKVrOODbwF1MmZVQ==
        "], CompressedData["
1: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
0dnG3veDDPz/ARbZ1Cc=
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", "t", "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.739272423237727*^9, 3.739283808631854*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"2aad0b73-37c0-4362-bbda-d12b910a7883"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s see now what the compass is doing:", "Text",
 CellChangeTimes->{{3.739269546927908*^9, 
  3.7392695555317783`*^9}},ExpressionUUID->"c7684253-f969-445d-b853-\
fb39ea017196"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{"solve", " ", "the", " ", "diff", " ", "eq"}], "*)"}], " ", 
    RowBox[{"sol", " ", "=", " ", 
     RowBox[{"First", "@", 
      RowBox[{
       StyleBox["NDSolve", "Code"], 
       StyleBox["[", "Code"], 
       RowBox[{
        RowBox[{
         StyleBox["{", "Code"], 
         RowBox[{
          StyleBox[
           RowBox[{
            RowBox[{
             RowBox[{"\[Theta]", "''"}], "[", "tp", "]"}], " ", "\[Equal]", 
            " ", 
            RowBox[{
             RowBox[{"-", "6.3"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "tp", "]"}], "]"}], 
             RowBox[{"Sin", "[", 
              RowBox[{"1.4", " ", "tp"}], "]"}]}]}], "Code"], 
          StyleBox[",", "Code"], 
          StyleBox[" ", "Code"], 
          RowBox[{
           StyleBox[
            RowBox[{"\[Theta]", "[", "0", "]"}], "Code"], 
           StyleBox[" ", "Code"], 
           StyleBox["\[Equal]", "Code"], " ", 
           RowBox[{"Pi", "/", "4"}]}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], " ", "\[Equal]", " ", 
           "0"}]}], "}"}], ",", " ", 
        RowBox[{"\[Theta]", "[", "tp", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"tp", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}]}], 
    "}"}], ",", " ", "\n", "\t", 
   RowBox[{"(*", 
    RowBox[{
    "I", " ", "use", " ", "manipulate", " ", "here", " ", "instead", " ", 
     "of", " ", "animate", " ", "because", " ", "animate", " ", "is", " ", 
     "very", " ", 
     RowBox[{"slow", ".", " ", "you"}], " ", "get", " ", "a", " ", "smoother",
      " ", "animation", " ", "dragging", " ", "t", " ", "forward"}], "*)"}], 
   "\n", "\t", 
   RowBox[{"Manipulate", "[", "\n", "\t\t", 
    RowBox[{"(*", 
     RowBox[{
     "find", " ", "the", " ", "angle", " ", "for", " ", "some", " ", "t"}], 
     "*)"}], "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"ang", " ", "=", " ", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "tp", "]"}], " ", "/.", " ", "sol"}], 
         "]"}], " ", "/.", " ", 
        RowBox[{"tp", "\[Rule]", "t"}]}]}], ";", "\n", "\t\t", 
      RowBox[{"Show", "[", "\n", "\t\t\t", 
       RowBox[{"(*", 
        RowBox[{
        "draw", " ", "the", " ", "compass", " ", "needle", " ", "at", " ", 
         "the", " ", "correct", " ", "angle"}], "*)"}], "\[IndentingNewLine]",
        "\t\t\t", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Thick", ",", " ", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", ".9"}], 
                  RowBox[{"Sin", "[", "ang", "]"}]}], ",", " ", 
                 RowBox[{
                  RowBox[{"-", ".9"}], 
                  RowBox[{"Cos", "[", "ang", "]"}]}]}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{".9", 
                  RowBox[{"Sin", "[", "ang", "]"}]}], ",", " ", 
                 RowBox[{".9", 
                  RowBox[{"Cos", "[", "ang", "]"}]}]}], "}"}]}], "}"}], "]"}],
             ",", " ", 
            RowBox[{"Circle", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], ",", " ", 
          "\[IndentingNewLine]", "\t\t\t\t", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], "}"}]}]}], 
         "\[IndentingNewLine]", "\t\t\t", "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"(*", 
         RowBox[{"draw", " ", "field", " ", "lines"}], "*)"}], "\n", "\t\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", " ", 
           RowBox[{"Apply", "[", 
            RowBox[{"Arrow", ",", "\n", "\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", ".75"}], "+", "i"}], ",", " ", 
                    RowBox[{
                    RowBox[{"-", ".5"}], 
                    RowBox[{"Sin", "[", 
                    RowBox[{"1.4", " ", "t"}], "]"}]}]}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", ".75"}], "+", "i"}], ",", " ", 
                    RowBox[{".5", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"1.4", " ", "t"}], "]"}]}]}], "}"}]}], "}"}], 
                "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "0", ",", " ", "1.5", ",", " ", ".5"}],
                 "}"}]}], "]"}], ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], "}"}], "]"}]}], "\n", "\t\t",
        "]"}]}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}]}], "\n", "\t", 
    "]"}]}], "\n", "]"}]], "Code",
 CellChangeTimes->{{3.739273103593129*^9, 3.739273130309441*^9}, {
   3.7392732090109463`*^9, 3.7392733815326567`*^9}, {3.739281224756266*^9, 
   3.739281261689344*^9}, {3.739281754470066*^9, 3.7392817997652903`*^9}, 
   3.7392819366721287`*^9, {3.739282107868094*^9, 3.7392821231662197`*^9}, {
   3.7392821646912518`*^9, 3.739282166952633*^9}, {3.7392822823003387`*^9, 
   3.739282399876746*^9}, {3.7392825002420588`*^9, 3.7392825113162327`*^9}, {
   3.739282884799862*^9, 3.739283001559333*^9}, 3.739283246424559*^9, 
   3.739283332641588*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"9d74c802-3edd-4422-96a2-61dbc4dc07fa"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10}}, Typeset`size$$ = {360., {178., 182.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$7370$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$7370$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`ang = ReplaceAll[
          Evaluate[
           ReplaceAll[
            $CellContext`\[Theta][$CellContext`tp], \
{$CellContext`\[Theta][$CellContext`tp] -> 
             InterpolatingFunction[{{0., 10.}}, {
               5, 7, 2, {270}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
                False}, CompressedData["
1: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
G0WoupLKKu0UoXOdwzm3zyL8+2XMwv8AgaGtJw==
               "], {Developer`PackedArrayForm, CompressedData["
1:eJwl02V0FgQUBuCPja7pYHRNB4MR0t0gSEmnIIpIS3d3S4OAIt3dFgIqIUg3
SHd357PDPed5f9yf9z03vEm7Gm1jBAKBkOgwwcQmHgmj94QSRgpSk45wIogk
iuzkJA/5KURRSlCaT/mMSnxOdWpRlwY04iu+oRktaUM7OtKF7vSiLwMYzDBG
8j3jmMgUpvETM5nDfBaxlBWsZh0b+Y1NbOFvtvMv/7GPgxzhOKc4w3kucZUb
3OYeD3nCc17xliC3jUVcEpCYD0lKclKRlgx8TCaykI1PyE0+ClKE4pSiLOWp
SBWqUZM61KchjWnCt7SgNdGFd6Az3ehJH/oziKGMYDRjmcBkpvIjPzObeSxk
CctZxVo28Ct/sJm/2MZOdrOXAxzmGCc5zTkucoXr3OIuD3jMM17yhhhBgUBM
4hCfRHxAEpKRkjSk5yMykpms5CAXeSlAYYpRkjKUowKVqUoNalOPL/iSr2lK
c1rxHe3pRFd60Jt+DGQIwxnFGMYziR+YzgxmMZcFLGYZK1nDen7hd/5kK/+w
g13sYT+HOMoJ/ucsF7jMNW5yh/s84ikveB30/vmDiU08EhJCKGGkIDXpCCeC
SKJ4B7qmg6s=
                "], CompressedData["
1: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
zfQ=
                "]}, {
               Automatic}][$CellContext`tp]}]], $CellContext`tp -> \
$CellContext`t$$]; Show[
         Graphics[{Thick, 
           
           Arrow[{{(-0.9) Sin[$CellContext`ang], (-0.9) 
              Cos[$CellContext`ang]}, {
             0.9 Sin[$CellContext`ang], 0.9 Cos[$CellContext`ang]}}], 
           Circle[{0, 0}]}, PlotRange -> {{-1.1, 1.1}, {-1.1, 1.1}}], 
         Graphics[{Blue, 
           Apply[Arrow, 
            
            Table[{{{-0.75 + $CellContext`i, (-0.5) 
                Sin[1.4 $CellContext`t$$]}, {-0.75 + $CellContext`i, 0.5 
                Sin[1.4 $CellContext`t$$]}}}, {$CellContext`i, 0, 1.5, 
              0.5}], {1}]}]]), 
      "Specifications" :> {{$CellContext`t$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {236., 242.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.739281263340439*^9, {3.739281786352913*^9, 3.7392818008626633`*^9}, 
   3.739281947408806*^9, 3.739282126124092*^9, 3.7392822939739532`*^9, 
   3.739282339404345*^9, {3.739282374150631*^9, 3.7392824004436607`*^9}, {
   3.739282512873193*^9, 3.7392825333128233`*^9}, 3.7392837770220737`*^9, 
   3.739283816643633*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"5c52d711-dd95-48b1-a58e-4128f98264f2"]
}, {2}]],

Cell["\<\
You can already see that the motion doesn\[CloseCurlyQuote]t follow any kind \
of nice pattern. However, a whole different level of weirdness shows itself \
when we start changing the parameters and initial conditions. Here is a plot \
of the angle \[Theta] versus time, where you can change the parameters \
\[Beta] and \[Omega], and the starting angle of the pendulum \[Theta]0:\
\>", "Text",
 CellChangeTimes->{{3.735483932944489*^9, 3.7354839472643557`*^9}, 
   3.735486472511282*^9, {3.735587929314433*^9, 3.735588040172488*^9}, {
   3.7360944038458967`*^9, 3.736094409443921*^9}, 3.736868574101507*^9, {
   3.739269624500225*^9, 
   3.739269779977524*^9}},ExpressionUUID->"0ed2d935-e8ff-4c05-9e95-\
1dd6631482fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "sol", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"sol", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], " ", "\[Equal]", 
            " ", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "0", "]"}], " ", "\[Equal]", " ", 
            "\[Theta]0"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], " ", "\[Equal]", " ",
             "0"}]}], "}"}], ",", "\[Theta]", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Theta]", "[", "t", "]"}], ")"}], " ", "/.", " ", 
          "sol"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}], ",", " ", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "\[Theta]"}], "}"}]}]}], "]"}]}]}], "\n", 
    "\t", "]"}], ",", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", " ", "1.4"}], "}"}], ",", " ", "0", ",", " ", 
     "10"}], "}"}], ",", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", " ", "6.3"}], "}"}], ",", " ", "0", ",", " ", 
     "10"}], "}"}], ",", " ", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]0", ",", " ", 
       RowBox[{"Pi", "/", "4"}]}], "}"}], ",", " ", 
     RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}]}], "\n", "]"}]], "Code",
 CellChangeTimes->{{3.73920247615798*^9, 3.739202518380424*^9}, {
   3.7392026562380123`*^9, 3.7392027854457607`*^9}, {3.7392045398125343`*^9, 
   3.73920455337307*^9}, {3.739204684924612*^9, 3.7392046872171183`*^9}, {
   3.739204723976563*^9, 3.7392047241660633`*^9}, {3.739204756054307*^9, 
   3.739204756260605*^9}, {3.73920502075333*^9, 3.739205023444314*^9}, {
   3.739205070350075*^9, 3.739205073338842*^9}, {3.7392081214976587`*^9, 
   3.7392081217175503`*^9}, {3.739213263995729*^9, 3.73921326536096*^9}, 
   3.739213323905089*^9, {3.7392141982613153`*^9, 3.739214200489107*^9}, {
   3.7392142441762533`*^9, 3.739214307675598*^9}, {3.739217089643906*^9, 
   3.739217138527766*^9}, {3.739217178128978*^9, 3.739217270379204*^9}, {
   3.739217323138815*^9, 3.739217379421855*^9}, {3.739218938660112*^9, 
   3.739218940745582*^9}, {3.739269823673459*^9, 3.739269888411775*^9}, {
   3.7392699316345987`*^9, 3.739269935981567*^9}, {3.739272440868657*^9, 
   3.739272444899805*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"981e4d94-f4c6-4345-a8e1-1e189b41a696"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Beta]$$ = 6.3, $CellContext`\[Theta]0$$ = 
    Rational[1, 4] Pi, $CellContext`\[Omega]$$ = 1.4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Omega]$$], 1.4}, 0, 10}, {{
       Hold[$CellContext`\[Beta]$$], 6.3}, 0, 10}, {{
       Hold[$CellContext`\[Theta]0$$], Rational[1, 4] Pi}, -Pi, Pi}}, 
    Typeset`size$$ = {360., {113., 118.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Omega]$28856$$ = 0, $CellContext`\[Beta]$28857$$ = 
    0, $CellContext`\[Theta]0$28858$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Beta]$$ = 6.3, $CellContext`\[Theta]0$$ = 
        Rational[1, 4] Pi, $CellContext`\[Omega]$$ = 1.4}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Omega]$$, $CellContext`\[Omega]$28856$$, 0], 
        Hold[$CellContext`\[Beta]$$, $CellContext`\[Beta]$28857$$, 0], 
        Hold[$CellContext`\[Theta]0$$, $CellContext`\[Theta]0$28858$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`sol$}, $CellContext`sol$ = 
         NDSolve[{
           Derivative[
             2][$CellContext`\[Theta]][$CellContext`t] == (-$CellContext`\
\[Beta]$$) Sin[
               $CellContext`\[Theta][$CellContext`t]] 
             Sin[$CellContext`\[Omega]$$ $CellContext`t], $CellContext`\
\[Theta][0] == $CellContext`\[Theta]0$$, 
            Derivative[1][$CellContext`\[Theta]][0] == 
            0}, $CellContext`\[Theta], {$CellContext`t, 0, 10}]; Plot[
          Evaluate[
           ReplaceAll[
            $CellContext`\[Theta][$CellContext`t], $CellContext`sol$]], \
{$CellContext`t, 0, 10}, 
          AxesLabel -> {$CellContext`t, $CellContext`\[Theta]}]], 
      "Specifications" :> {{{$CellContext`\[Omega]$$, 1.4}, 0, 
         10}, {{$CellContext`\[Beta]$$, 6.3}, 0, 
         10}, {{$CellContext`\[Theta]0$$, Rational[1, 4] Pi}, -Pi, Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {186., 192.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.739269809646595*^9, 3.7392698555131283`*^9}, 
   3.73926989000391*^9, 3.739269936913672*^9, 3.739272446719591*^9, 
   3.73927354511481*^9, 3.739283777285022*^9, 3.739284171577726*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"51b28f17-cd36-452d-b57e-797fa5a5822f"]
}, {2}]],

Cell["\<\
Here we see something very odd: the long-term behavior of the compass needle \
seems to vary wildly with tiny changes to these parameters. This is a \
characteristic of chaotic motion. \
\>", "Text",
 CellChangeTimes->{{3.7392700538574533`*^9, 
  3.7392701185310802`*^9}},ExpressionUUID->"a99d3207-d7b5-4028-8568-\
3e7512a4472d"],

Cell["\<\
Another visualization that shows this very well is the so-called \
\[OpenCurlyDoubleQuote]phase space\[CloseCurlyDoubleQuote] plot. This is a \
plot with \[Theta] on the x axis, and the time derivative \[Theta]\
\[CloseCurlyQuote] on the y axis. Each point on the phase space plot \
represents one state of the system, and the curve through the phase space \
shows how the system changes over time. Here you can change \[Beta] and \
\[Omega] with sliders, and choose initial conditions by dragging the starting \
point around the plot: \
\>", "Text",
 CellChangeTimes->{{3.7392702356108427`*^9, 3.739270457808138*^9}, {
  3.7392705676928167`*^9, 
  3.73927061077737*^9}},ExpressionUUID->"94f5ac8e-053b-41ee-8458-\
981bb29205af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "sol", "}"}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"sol", " ", "=", " ", 
       RowBox[{"First", "[", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], " ", "\[Equal]", 
             " ", 
             RowBox[{
              RowBox[{"-", "\[Beta]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], ",", 
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Theta]", "[", "0", "]"}], ",", 
                RowBox[{
                 RowBox[{"\[Theta]", "'"}], "[", "0", "]"}]}], "}"}], 
              "\[Equal]", "point"}], "]"}]}], "}"}], ",", "\[Theta]", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"Show", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
              RowBox[{
               RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], "}"}], " ", "/.",
             " ", "sol"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"AxesOrigin", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", 
        RowBox[{"AxesLabel", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", " ", 
           RowBox[{"\[Theta]", "'"}]}], "}"}]}]}], "\n", "\t\t\t", "]"}]}]}], 
    "\n", "\t\t", "]"}], ",", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"point", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "4"}], ",", "0"}], "}"}]}], "}"}], ",", 
     "Locator"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "6.3"}], "}"}], ",", " ", "0", ",", " ", "10"}],
     "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "1.4"}], "}"}], ",", " ", "0", ",", " ", 
     "10"}], "}"}]}], "\n", "]"}]], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ3fNm0orPt187xnNf3gaif+RnHALR94TenAfRYnlW
10D0Djv2+yD64L8fT0D0Ep79z0G0svd+li9AumzubTCtcslQEkS/sT4sB6Jt
FL74gmivLQL+IDqvZ0r8VyCtsGUdmH5zb0MaiD5vdy8LREftcr0GokNfx4Jp
M/2wDyD6t2/5VxBtL+si9w3kTlVzfRCdupX7zQ8gzeGl+QFEh9xc9AtECwn8
hNALrWx/Aumt3S5gms/987HfQPpjUfhxEK2/pTb0D5B+9upHPIh+sl4iHUQ3
HK/JANHHprPcAtFme5TB9Cefzflid147ejObFoDo5VOOrxQH0uWT1m0C0Vsc
du4C0flNe3eDaO/1nKdAtFb+QzB9qpA5Wg5IJ62xiQHRAKqx6zA=
  "],
 CellLabel->"In[16]:=",ExpressionUUID->"58a9a218-b537-4a36-9207-8b822b18c84a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`point$$ = {
    Rational[1, 4] Pi, 0}, $CellContext`\[Beta]$$ = 
    6.3, $CellContext`\[Omega]$$ = 1.4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`point$$], {Rational[1, 4] Pi, 0}}, Automatic}, {{
       Hold[$CellContext`\[Beta]$$], 6.3}, 0, 10}, {{
       Hold[$CellContext`\[Omega]$$], 1.4}, 0, 10}}, Typeset`size$$ = {
    360., {172., 177.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Beta]$29013$$ = 
    0, $CellContext`\[Omega]$29014$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`point$$ = {
         Rational[1, 4] Pi, 0}, $CellContext`\[Beta]$$ = 
        6.3, $CellContext`\[Omega]$$ = 1.4}, "ControllerVariables" :> {
        Hold[$CellContext`\[Beta]$$, $CellContext`\[Beta]$29013$$, 0], 
        Hold[$CellContext`\[Omega]$$, $CellContext`\[Omega]$29014$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`sol$}, $CellContext`sol$ = First[
           
           NDSolve[{
            Derivative[
              2][$CellContext`\[Theta]][$CellContext`t] == (-$CellContext`\
\[Beta]$$) Sin[
                $CellContext`\[Theta][$CellContext`t]] 
              Sin[$CellContext`\[Omega]$$ $CellContext`t], 
             Thread[{
                $CellContext`\[Theta][0], 
                Derivative[1][$CellContext`\[Theta]][
                0]} == $CellContext`point$$]}, $CellContext`\[Theta], \
{$CellContext`t, 0, 10}]]; Show[
          ParametricPlot[
           Evaluate[
            ReplaceAll[{
              $CellContext`\[Theta][$CellContext`t], 
              Derivative[
              1][$CellContext`\[Theta]][$CellContext`t]}, \
$CellContext`sol$]], {$CellContext`t, 0, 10}], 
          PlotRange -> {{-Pi, Pi}, {-3, 3}}, AxesOrigin -> {0, 0}, 
          AxesLabel -> {$CellContext`\[Theta], 
            Derivative[1][$CellContext`\[Theta]]}]], 
      "Specifications" :> {{{$CellContext`point$$, {Rational[1, 4] Pi, 0}}, 
         Automatic, ControlType -> Locator}, {{$CellContext`\[Beta]$$, 6.3}, 
         0, 10}, {{$CellContext`\[Omega]$$, 1.4}, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {234., 240.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.739270558676825*^9, 3.7392707450111847`*^9, 
  3.7392735453489313`*^9, 3.73928377753272*^9, 3.739284194965013*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"ea18d167-154e-412a-b424-b61c12fc28ae"]
}, {2}]],

Cell["\<\
Here you can really see the wild variations in the path from small changes to \
the parameters. Another strange kind of behavior can be seen here; in some \
cases, the path seems to stay in one contained area, but it never repeats. If \
you were to look farther ahead in time, you would see that the phase path \
would still not repeat itself, but would still stay in one contained area. A \
curve that behaves like this is called \[OpenCurlyDoubleQuote]fractal\
\[CloseCurlyDoubleQuote], and fractal phase space plots are another \
characteristic of chaotic motion. Perhaps the most famous of these fractal \
phase space plots is the Lorenz Attractor, a curve in three dimensions:\
\>", "Text",
 CellChangeTimes->{{3.739270792354918*^9, 3.739270829358098*^9}, {
  3.739270901211413*^9, 3.739270996798729*^9}, {3.7392710510913267`*^9, 
  3.739271085234164*^9}, {3.7392712256618347`*^9, 
  3.739271267733927*^9}},ExpressionUUID->"e582e8e9-3e7a-444a-8bb6-\
0db06d8d896a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Lorenz attractor\"",RowBox[{"Entity", "[", 
      RowBox[{"\"MathWorld\"", ",", "\"LorenzAttractor\""}], "]"}],
    "\"Entity[\\\"MathWorld\\\", \\\"LorenzAttractor\\\"]\"",
    "\"MathWorld topic\""},
   "Entity"], "[", "\"\<Diagram\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.739271105931696*^9, 3.7392711341442003`*^9}, {
  3.739271204585039*^9, 3.7392712055030613`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"073f4716-03aa-4633-8499-ccddaeb0de14"],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJwMl3c4V38Ux+29995b1tee95gJyR4NSopKKf00KKMoImloaGin7JmEe6Sy
IhmRKCtk7x0/f93neT/n+dxzz7nnfN4vab9glwM0VFRUDExUVLSbT0gZOCKV
UGjmLt4nt7ExSVB9eRDNfOCE6UPn9aa2tBsEQ21hMlPnJJFcNGcwo81OOPyq
WM8Kekq8ET/Bo/5lkog7l3pD6PcW4ul9yQEnnwyiTFpv9mvbJOHnneh4XwAI
vhF1Ry2BfELgnrXa/oVJ4nlw0s/I/Q5Ef6ZEJ29wMZH5vvtmicAUYeuqwezA
4UFopZlqupSXEqJOHQz2plPES6drBeRzX+LGfgW5rGeVhHXv531Lb6aIdEPJ
qO88QUTcbKR608cqoqEjdG/X9BSRdb2r4nX9CWJ9lVIiNfSJ6Lnxcesey2ni
ZrgX5S7rKeIDzdKvXbp1xLfn6W+lGWYI6pqc3nXOKEKgtvxuevI3wrdGkLqD
dY74mZheNdl4lcgKSP3wqLSZyM4Lq0tInyMmg8rYtvFcJ+Z8d79aG2khLnTv
/njKaZ6Yf/D9lXfITeKhY+XXT/u+Ez9XT/nXfFgg6B5RC9EM3CWsD83dzXj/
k3hWpJGYbbBC9LwfXG2+/oz4eY2rzPLAAOEzcpUpqpsaON/VFLRNFREy3cxh
J3b+IXbd/nTe6h4NFL1z0DWRKSFmo9e6VbwHiQDtEufBPbQQJ8l2oSS2lDi1
rbhAN3SYUK9c/8JPSw8NZtWjW+ZJ4rFUlr2F3jhxtinB1L6aCc4LrezxYagm
vDJG9jhemiDseG89Ym5lBra3NE9atWoJvvmjHy0GJglOKv+Mt2MsMDVjdf5F
Uj3x7fOdw4YHp4mEPss35Zbs8Ert1BbO002E7c2m4pu5c8SV+fmHOvbc4Fcu
2ygV1E4YvT0YW3VvniCUeczMmHjAyMe1XDj5BzFwgxSqTlwgtqUtcLk18MAx
pqaZswM/icrDuwtWri8R/dtUqduP88EB8IkYvNNDpLcorRXJ/yMsg2kTluWF
II2ovdkYPESsPWVTowqhg54DEk4/a6TAQyi5yFlzkajIq3EvPkAPp5cq/Vmv
SMMVDm4D6cPLBIhlG6v5M0BmvtXGsIsM2EnzSvD9WCWYsra/WLzABAE/LXyN
12TBSd5uW3vh5ljcE241dWUHL9XMwGs5inDpfgWH5TIjCNjoFSuncwB4fSu8
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
XUPmMXIvX2iquO9vUmSPc0qyAgUu3DYoMmsZJdOcLvQ20vSSaQH1DrKsFAjv
SXfe/XyU/Gmx9oLBo4/0dhQ4N77ph0//V3XpxLlREm/aTZx93U8WNjd/mWjV
ArHP7OV7d42SU0/OiwX/GyB/MpX9UyjVArATeshmPkpqno6r3uIySG502X9N
SdOCXWwdQjvVRkl2e5rQ1VdD5FdNCR7jWC2wsqUwaUmNkg6aLRvyG8PkicfL
bwSObMYTzy+cFR4le8eTTi56jpCLbzyilJy1ILzlQL/4pl7cIv+qLH+UHBVx
iTuurwVjxfV+rJKj5Otrua8/co6TVnY9XybEtYDzQP9pDdVR8ubWq+98gidI
WY6X3s/otED0TNf3s6ajZOGbxKaf3ybJ8W+T25JGN31d8HfGbvdR0jB9JLH6
/hQZVK/dkNOsCaXs9U32/42SEnlSSwecpklexRd8TJt+WOW35JBM1Shpdkzr
+ANyhlRUf8PiE68JT70FqcNnN/Pk/DaSEDZL0lqKBe4+oQnvkv7kliuPkWZP
+hsn9OfIMz8v9t/w1oRMhovzC6/GyCPSL60+l86TDOO5+m9UNv3zo5NLOqPj
5KXTElL9f5ZIXupBF4U0DfhYXqxoUTtF/ipr8Pm2ybv5rl6PxOzUYdhPRK2C
e5q0XM2PuBROhYei+ivbpdXhY/LPmdN7psnwdF/2tRUqfORQsyqzogb3L99X
a12fJt3+FHEO0tBgnZV3xulMNSibeR+df3iWvMM0vkvciA5PZqQrJQipwYXl
OC+mhQVy2WHPoPJ+ZqSyTbf6wbMFxhpkJCxiF0nLWpOU0C0sqCIX8TxgVhUK
PMWOZwovkW1eYv2PVlnQaMr7AHubKjRMxe2657JM8qZnUe3IZMN7z/sPNt5X
hS2Fqi3tTGtk0cO72q7qXFiX/CrqlYEqHA7hJa98WiP7aOt2bsniQh7G5rFD
sqrAqJUonhb3j5xdEnGu0OBGZ4lvH0o5VUHTd6fTfZkNskr12t4Q4MEEjrpW
93EVYPJsLexe3iCX/3x/9LmRB1O1+07U/VKBKcGYraJBVDjOcuKL/j5ebB7g
tZNpVoFsw4h7oe7UqHUk6F7TDT4sLu6b6K5QgV/0Nztav1KjoPDzx/IU/k1+
NH1xukQF1NmehEg7bnKZvy7/bBs/Ju6Z/+BTqAI2oQWsoU00qCB55KhDhAD+
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
OUXtp3/itNbWTGRMbMghf97rwm8NKJjiX12vH8GXmthYz1Cxocj1uYNdHzTg
zk+YXP84itty3qDq2mNFlM7+JV3PNKD6P7n3e43j+IfDUl2+W6xoY+4sl3ui
Bnx2Gm19WjmB6/I318Zvs6Lc02UGsaT+O+K4FHjpyRR+/ORhVV5yNkTkJT+i
ZqsBmmLMDVQ3/+JuTaVuarRsqLIDirx1NOC+wrW2McdZnOtM4wAfGxuaakjn
USRoAM/2/pEs1Xm8TvOUyTdBNuS/43w/hEoDLvO57dbsLeCq81TdNnJsKF7w
/G3rGXUomY5IHh1dxN0FJR4W6bOhw216t4s61cF6bij8yYclfMv+7bGuo2xI
aiM/IblGHSoNqG2+3VjBo8ONa0si2VDPFuYyl6QO7VEmV+tO/cMbnz0TtM9i
QxNXNl19LqvDbtoyzR/lVXzqlnvPaB0baj07/fKSszqcHm240De4hkvtfr8V
Q8WOgm1SrGU01cGPtzOtWmYLF/9nA2JV7OjMYZ1h20k18Kapal/e2sI5tp4E
Vk2zo3tXhzPsetRg5SlToua3bbxE8UShHJED+fPNXF38oAaJs+2SJUG7uDU0
6ldmcCDed3avaPLUQH43ffvKOTIU05x71z6PEwUesPHh9VKD3e8+oQnfydCQ
JeXm2hwnei+Wln7mrBpYPsC0vQzIUYVWRtwlfS60ddOm99QxNcgbD7g9y0eB
1Oy6/9D94kIbcmkTWXpqsGR4Q837FyU65PZC0M+CBzFvNAit8amB+pmCIn0n
KhRFJhAu95oHFT+rXgAONSggGJ78MkyFzNxH+5REeJGip2ZSPpMaqCUnGMq7
UqM89qQjQXd4keicd8X/3+s573Nahv6hRiyqj//MUvAhX3ZGvZ9UauC5TPfn
iw8NMkhnYEgP5UP6CfbFTRRqsHeA3ErtHw3Sft8/Yr/Ch2zfdrEvk6tBI/Pd
/OZwWhRq63xVI4AfcX+1S/AmxZcOzv7LYqRDNJo7KeyL/Kj61tgTfVJ+X0Um
7eaHdGhvu+fdcJAASulhzg6kVYNH/IMaJxToEc/uumD8hgBau/6+m49UP3Fs
f3DkJANSMD04yckkhAbXL8/P8avBITkb560FBnTLkNhZnymEGNca4rXE1WAj
ILb1dRIjKiZMn+mXFUYCjtEykkpqkIVf35BqZUK9D0IsPx8joHvsee0Klmow
W/vCduUiM7oipKtqPUlA/s+mbdzOkOYzdzMjnJsFRZdUsD2KEEFvNkN7rviQ
1mtqw/eHNyuyFM43c7YnIutwIsvVDDXgqv1K0BZkR/qdCRKiGaLo4xNNWw8K
dbDhYnUfEuNCz1vWiya2xZGojnWT6yEN8DSLmwyO50IWlmJntU0lUP/56mcv
IzSA8zDFYOc8FxrMjmsJjJdA7exTS8lVGiS+zk4JqOdGz9aeMwYxSqKG3EaD
f/KaIO558G6wJA9q+fWuLdNCEn0KvYOFemvCWprq1IfbPOi/B5+Y/aIlEbVk
7OvIUk3wldR6Vu7Eiy5zDsTgfyXRl6nz/fMaWnDIPeL5dhMvcoEILIVPCgUf
YbLTvqEFA7bO2QtKfMgBO+5ebCyFlPxjwz43a4Giee2xs/f4EHZ+t67KXQpd
ff7oawKXNjhurJ9m3eVDKZYf7M/GSCHZDkon53PaYNub3tztxo+mRnk+Q5YU
OmvoMir3RhucAvfeBjfzo1Uv9lWmcinUJKl/oZlGByydpVWq5ATQ3R89e951
UojtmPQqs4MO+JDjRMdkAXTLJiSF/r0USu2QvNVRrgNjcddEFGYF0OmJ0p1M
JIVobcnkR2l1wYu6+fmYpSA6l7+Z1PVWCtFvxv1jcNGFfS3DbyYFguj25F2W
S4VSyGLGc5PjnS7EGdUG0u4Jotd3P7jo35FCZeFvOuo59MBTtMx+3lYI5Zn7
s25elELLTCZ2Lb56wJnePlPxTAgpV6dRhB+UQqbcroqrTXqgTstxodVYGI0U
Cii5DUkiG7WqFzHX9OFe0++IewnC6JECWc+jh5Lo8ncHZdsufaAVKVBS/yaM
utqds22PSSIrRSIZl7wBOM7FWf0+SEB+XOk813Il0FVZyVnFXgMYfkN8dvU6
AakyBOISmARi/1L2YULGEObvhmnOPCeglpcnRVq6xJFg4LmPx0MNYfrxwFT6
LgE52n2lZp4QQ5EbtzWZOYzANECR8oagCLpgfzREwk8M3f7lTiZywgiUd67e
P6ghgvZfk4+emRdFaYTCJeUMI9hY7pzvMhdBmty7T+m9RZGunzWBodMI1BZu
PGQ8KYJutw/3PxghIvpC6dNhjBhgE/wG/U4iaKCDZuvScSLSs3JSPmGMwcnI
UlFZNxHUsF6cKxwpgvoOn6jyu4RBYGiIz7KzCKolbxhqsiWgALG5XzlPMSDn
j6tXOC2CYqvrc34ThZGeyF+71lYMYjuPDvRYiaDC2vWJ4ClBRBs3YtCzhMER
gkj8orYIkrvN8e92qQBafRUn0U0PcDVXWitGRARRXPzCYeTDj2pucmo85AOI
MHsfk0VOqrN1ovmBDB86Zydbry0JcOtR0MzhYQJa6iGqvRrnQdSZi5ElygC6
lLxnSysJKPwhtc2DJ9xIJufc6LI2QNa0VUV7HAHN/ik+a+/IhcYPLStzGQFc
u3VyZciOgNzv5tvtCnKiB6KX1blMAICH2XdFiIDs0ptKw3+yo8OWAoe3TQEW
NpXs9EeEUcq78XcduWzI9tuYdjdJ/032MvFXtjBaSr2iU/eDBZGZJ42XGgO8
y3tlxXJGGEVnVT/eCWFC30PtDqUaAtS2Ng9ssAgj3FX6744EA7pXKaOXQapz
xTdApwsJoZIzLLVav2iRPMtPkRbS75qot+9X4xdCOk99Pj68SYki7rVc4BUE
uMRj858cEkRj3N1JHAHkaHuo94c9C8BjydIja+dI+8i4uLR2eA/XjpTakCAj
6ZuVLDu5Akgx8+QVYdt1vJmY2nMCx+BFhm9aEDU/EpwrfFbhM44HfnGSUxTD
gO87Z2tFJh+KUJH6leX7E6+RFmIxXzOCFpnPBmUKfGiv2BbzLe/EhYIXTo59
NoI7OcVbz4/yonajB+HfhOKx97KjxMPeRkA3zn3+/R1utJJ/ttD06y/syeHc
L7K5hnCHq9yuXIQb/bG9Zl9LNobtReozF1w0hMdi/c2LL0n9uHTXUrb9D/aG
hselSc8QGIyjnVk7OdGNUq+Ki/f/YgmcGxEXOg3ga8d//t9J/uB8nBsVXcIi
ln5W73cmuQEopjRF+r1lR7Yr12htWZYw3wBbrPObPhAyEor9j7IjafXbvl9C
ljDM6pi63UN9cP4npDI/xYZyPMcYvn5ZwoxkD4sreOjDOeVMq/2bJF9YZ7VY
RbGMfXzo8u+8hj7Y+hgqvyWyIUOy36u/JJaxxvRRMToKfXAzNT10LJwVFfFz
RmeoLmNGg1kDwu160P7VSP1TAwu6n0dzXVhuGWPsO8palq0H04tkjn8pWBDH
7RCPN6zL2G5kQHqtnx7ksY8X/LBiRk56ZsXJY0uYvkeixhFDPWi8TVtafI8J
5finLX17toTx6Cw2ezLrQW6MPq+2HiOq/x6mu7y/iGWQ6S/BS11gjrX+yZHG
gOQb3A/M3F/EPtHs6VBE6cK9ryVJTPP0SKoz426o+CLG781EbWurC6sWAWeu
vaZDWbwdSvuq85jB29jpvE0dOEfWkTglTIcEumaTHFnnsNLU60wRbTrw+4V3
ucttWsTI5+TsPziDebr61ozm6QBvmby4fwgNesBpIaJ5YBrzdwiIMjqmA4pj
nuWV4VToGnlx5IOoMSznJr0y70ttqHzu+KnpADkibprxff76BbOsPNvrflML
eAWi8lwXyJDJ5YbDZn/fY1oUY2y/nbUg4tM2U/JjMnThVVZZ9L+3mCezrNkH
Ay1AHRtqZ8nJUF04zZKe6X94hvaW2Jt1TeA/8NNlbWIX/7Xr4UcIbcND/k3x
swdpwmmhyIacoS2coqKgbVp0As+THdq2vqoBwas7F4sztvBSyYsXhzYm8Zzt
5H8eZzSgvsVECbPbwmeG7ndd7pjGGfScPDr1NcDlfrhB9e9NnL54UkIwfg7P
aKcj3CXXAJoLrMeDyjfxc0vGOcEXFvARrw6HqXF1SN7gbHSP2cQHUhbTbuUt
4uVXFrYTP6tDxIULBS/0N3G9bVeFsbhlXInlitvb/9RhNYuV5TdhEzdJlpyT
u76CV7DfHgWSDy9eHEmkod3Eq1D9HbKgf7gU17Qar706xB36VMX6bwNniuG1
j/FaxcPCT/jpYSR9U+/Z/J8NnJohwviH2xoez2fSXSKhDsH5qtczhjbw1cZv
tmJO63iqbWGpJ4M63DzcWbTWt4EDf7DqTYcNvOFfAxa8SPKNHQLdNP0bOFuq
O4u4wyauJXiQv61XDTiNdfNqSXk6Vu9fk3Pcwj2vjg1eqVeDLtOYOoaJDdwm
Jpjmves2PjB9Vt4/Xw1Sx7at/65s4JmWH+k5vXZwU9msd2+T1KDVymP6OM0m
fiVVetPy0i7eHPE6zOaSGtDt+PYaCm/i1rwmzOmRe3iuX+w1QwfSuHtTp/N1
NvG7NnIRhNR9vJeGHL9uqgYeZuEJkac3cZ/aIx+SjpOhIyZuXmwKahCACt2S
CzbxS9RCPky+5Oj9Vdenenuq4H309Exl5yZep9VU37hNjryrmYS7J1Whhzbz
iSXVFg5vvwik3qZAkUKxS80dqsDSs6/2KngLX6MhlE68pUQD2kVHm56pwlXJ
4bjixG1c9myY0wk5GhR5tO37qROq8KLdjfXs6DYeUKZw6uMgDeJ4Hk/vDKT8
vu4LDtgO7izYrPDiP1r06/cvlwl5VQju6uH1od/Fy/6TIsZQ0yPNC7O2sVSq
8Oi/xjzGX3v4nnZdpYEIE3r21oo1vE4F7MoPOfm67eOyXoOysYtMqN707NJ+
KUnXl7SPndnH1WIt8y42MaOXCnRSMo9VQPmIdlt6HBlCbwKU30ayIseAq203
w1Wg7QmvpPF30n5UzVGLzmRH8qWBxbLWKnAnWV9zUYYCHZwaYsrm4UC9tyMc
HhurQGBMzXZnLAU6+e/u0/R7HOgtxe2yRW0V+IYbzVywpESveb70HcnhRHIb
5gznpFWgvusDo3o5JZJqtjBVlCH58QKBjAyiCrzeucLpKUCFYga1WoTfcCH5
qYSyDgEViDhq84czngop3Xc/omDKjcq/Np0R41EBprngfLNNKvSWp1rftYcb
VXxRXr7LoQJaqnpBdBep0egEi/9Hbx6UuPRkV41NBZDIz0C/CWr0nPZCsyMl
L3I+X0nJxKoCTzw9h6LcSJz1nvm4eg4v0uz/oKVA0usiGG/YjtKgOxan7h4w
4kOpb2msckl5RDm8NxfcadFLZ1aB9BE+FNtpKnmDUwU69tU2zs/RoiN0TVcI
t/iRUnBaeSsvaX6YP/9goqNHoWk6cV0DAojP8kcYpaQKkAccdTj1iB6lRLV7
TSQIorYpKhVWJRWgsfNgKVVjQMxeb9qZDYRQZjlhskNHBajWgpXu+zGiEzd8
HI8UC6PrRr7xn2xVQNbo+gk7Eh951ooTpUi+bj5wayXhqQq4cPD++fCFBXXe
rre79IbkAxmDWrxrVKCcWf+pVzQrook65/KOVxT54/8l5vaoANvBRkkxEv9b
1r/WyB8RRYcco0/7carC8UNXa7JI6038gJ26eVUcFbKxcra+UAUne1dl5SgO
xFkdMSb+UxxJ3vkmVTekCoPs2W25cxyoZ+fqWxMTCTTv+P17KbMaaFPt2y21
cqKteCiYppdE4RretO0hamAKfLJNj7hRaNH9gP1YKUTH5G/QSjrffrZvqAlx
8qANwen0+WEp1IJS2s7Uq8MpeneRuCQeNNj1YDtHQxoF3CNUHKDTgAtWvd+3
wnnRoYlxQlK3NDoFR15oFGnAGZd8IWqSv1xukRPQ/yGDHo6O8p9jJfWXwCX3
pz/5kbz8cjQTnSzKqOG6esJbC2ZcCp83HBVAsoS8rFcqskj48V39LyTO0vZn
ahNrFEBl8k6bDcdl0YmJwI+PpbVhxqLre5qqIEo8QuPwxU8WZS3pU5claENX
Tsn7tieCSJhgG+wZJYusyak52ua04WJ0/lY6ixByzDGl0roti+QoIhLbbUn9
sexP3NNrQujRtUzL7//JIuoNJ6vIWlI/fX7PrWxcCCXdJRj0J8kiGV0djlwJ
XfCRls4JsBZGvIqvXddvyKLB5nL3jRRduPrpV/yTV8KorqMqe/iCLLI8y/fF
cEsXnj6xebrESUCnBk4Gmh2URZl0Y1xyF/TgIrohxXuJgEp5d23+CsoiteMF
3/w79WDw2YPED20E9PKw6lzWpAwiD/p8r85IH7hdjnEUS4kgqvAqf/ViGeRl
YPmntkQfCi1UeP5+EUE67K++lTLLIGd+Xw+vSAOY6+7yPclARAatzYcjyqXR
R5f+IKdpA+gLOmVpoEhExtlu5ARLaWTVcyjt7jFD0J7i+E7jQ0Rrf9WED56V
QkUPiWJGfEagslU4VRhLRLSO0cNGfZKom65P4t9VI+DsqDA2zyKiRFPBslES
dzOxGK36dRtBwgdxJdYPRPTsZNhCNbsEGuz7L8IsGoOsF9QKNB1E1Jd57tdP
L3HkEBu5t96JgaQmk9X9QSIqP8WvnFgjhqwi6ClTWAGYzf/GvxolopexQaZn
qcTQZjqfuKY6wE9jtv0DE0R0jHyccctcFGmoH3A+ZgeQ+v6mjRVJfyIl94z3
FhEdUuDP+hAEULZtmlBFypOjvflmOFwEORWlX7ycAvAvrfhmHGlckQr9x4nT
wuirvv+mTSGAoeK3zLp2IlL1vjvw/rAQqtdmOmlRD0D27Tu7/Xsisr15QFy0
TAAJbLZmHG4HyHO7VnahnIguN07fNabnRzZJ+OCZEQB3n3DK+YdElNl/dRE/
x4uyrO+d9pkDuDsMLHtRRPRDVltbs4EbzS9XmN1cB/DQsDpV7E5EeN0Wp4oA
F+r/klJatAfAwWeZRXWQiEIZm9O0QzmQH6ek/x8KY/hUxtcgI05Eyatll/Eh
NjTdfRFZUBmD+I1ubtctEXQqt8vKOZkFiWHrtuOk+JdvRD4GF4kgldyvt0pI
51mfhvLFNlL+OHXj+K/HRFDSDafwIWc6pMA37SWyAfD13bjUixUCSt9UO6vi
To1qwifMV+ZJuCbqxeKWSuI7G32auggKNLoi/NpjDGBDwzNZQ46ACvwVjpWR
+iGTwsk3j3sAzDMtLgc3CCN95ifLpuub+MMsl6GKTwCHBAX+RA0Iod8aq+O/
whfwuf21O1xPAGgDh66tugmhdxzxOpXzf3Asor2vIBEgLMEwQZTEt7+VGxrs
Cn7g/1UlMxZdAkjuW+lYnhZAG2GU0lmUCItgGJW9Q+LBGdw250o3H2LoZ5/S
p1zEKl4xUrqSOPrHzqfaokMkvr27Tr68sIwxiedXiLtj0K3G+YjtPS/aSvz2
zzZvFUvkCNbpk8ZAIMXY5n4ZD6pxyTt+79wWdom29eR4iREcqdrV9rrFhdat
H597V0cGDyI7Xz18bgiDVJTY9DInelEeGvcikBzQ3KvVFx6GsCyb01biwomy
3UzKo5kp4KWGIx+LuCFI1ienfQUOBNcucavvUwBLquSm4iMD0OHKS0ipYEer
PfS0n05RQp5YvZLkaQNofaT9/oQMOzJxH7R5/JgSSiM9Srq5DeAAvnXGIocN
2fUSpOi/U8JSHF3lkW59+HVi3zWejw35f4V920VK4B3PCsm9qw/XZ/zZPWVY
0UPpdZU6ciowipkwHrLVByeaqeRWCRZ0GIVUX6GiAh0lzkZqbn2wtl9S95Ji
RqP16bfKNikBk1K1kerTA38L3RUPRSYUGsbYfGOUEs6Vq7OZPtQDWq4Lf6d0
GdGxGTGDTZwS3vPoOTg76cFCh8gXGmsGdPpf7X3xu5SQ/769/rq4Hoy865Tx
jqJDioZ0SScJlBASeV2iplwXCo8qGLbm06L/fg+nSPVTAC9BuKI3RBcWGcr+
kLXRoHmj70g9iQKCZGnRnLEueHxgEFxWpUYHteldGEbIYfQDT/ZWrw4QD/92
PYNRICajlSrWU2TgsL79aJNRByyMU8gPN23hqrIvnLp7NjE1yd1gqsdasPGw
sfNx/SZ+n0efznBjA3st20DPF6gFc05MhckNG3hWx3JNt+AG1qhW8vrTQS1g
ul3i5Tu0hmvl0Obxe65hjvlSof0rmnCmqz9vJmoF7xTa3nAVXsEMTnkWWdhp
QoXNZ8qJm7O4+EmPylzzv1h7QcwdPzkNCKj51JR4YgQ/L+Y+kI3asBdhdeOe
PGpA2LbpC0W/8IHlFS/93RaMnlPZfnddFUoSBW5Xjg3jufO7t2etmzG7w05c
X3+Q/LBGd8uczU/cKrl0k0wMYQH1vt1c2aowbpXs2tE4gFuQBZKrWKdjy8yJ
xw1lVSEq5fPWYb0BfLFcRlLy+FV8Yfzz9dtMqtARd4sYWf8DF9rhHrx8PwdX
VbhCybGoAnKzGSc/j/bjZ396t+TGv8FL2hy2/n//FbeUaODCkz7cfvJdZnlM
E87tyPzGwVIFWNDFMk6PPvxAv8i95dgvOH3T21Yg+a6PEoJC7Zp9eNhs/ZLu
za94/PzBjJMkX7dFJmgzz9SHE85oh0Xd+I5/Tely111SBjf5l+HYbC8+50Q9
NarXgUskiz+TrFMG/9Y3UpldvXhXBZNPdFUnPnz+4YnAOGWIjgrpa3/fi984
0mNAUOvG01iChwVtlWHwI4NYw7te/NnxUxmaL3pwugqhVxIiytD8juE+VPfi
4bKz2pbyfbhVQMDJpBkluHBS8oNuQy+eeVHl4kBxP7525qjj0WolOH3pjlFS
ay+etZwY5S03gGNM7+wCYpUgbPBBuMBIL34hlqskrGwQl6EP7Js7rgRlCW9r
u7Z78Vs/GpzT1H/iMsMpGc1EJVj0+z2UR+jDBwiy3ur1wzgc9DbenVeE6slD
xBCLPvxh+EZnoOQIHv+ffUpKvSJElLME7Zb34UGn9ZMsan7jIVZEjQ8OivDI
8MSvrIU+3OJG5mx7/CjuLvlc74K8Ilh1WN4X1uzH02b6Qy7Zj+FHbKZUzm8r
wOPut0p13f14ZLFEiiTdH9wfJbUEPFYAo8X4wb8XBvCT2pNUWMYUXv9kKf3b
qDzga9j+Hul503dxzfRxXMT10muHv0TKwWf6cpVfGb/wLvchu1sLi/jjqIDP
KiflgKfaumlKegQ3JfTq1cQu4eut+YYb8nLg1ZeIHZ0fwbdoT7qq48u4Z+HD
gef9svDxSWZtwctRPHXOWJvXdxXv4mSpa9OShfK/Ad5tIpN4zeP+1+dGtvHp
1fCOa7QyEB++yhFbO4kXjNbVcTXs4OTIQpR5QhpONGvVZpydwgOlczvyc3fx
7ePPFlg/SYOjhd15z5fTeFLDg0OuUfu4W9t+0aUYafhbePhG0uNZvNKvrdO8
jRwd4xH04aaXhuxLHittHnOk9QCC8VkKhGm3e6XMSEFD9lvvH7rzeODm07mG
eQoUvDGzfK9NCq7L/faUWFnAXY0Z8v6KUiG3T4fC/e5JAasoWdq1kSXcZPFj
XvonGtTKy/xzSFEKPONCKn3OL+Nsx745HLxOi0y/lRRFcEuBoXQwe9XsMm6h
8HS2T4cO3bdbfzO1Kwm/lF+9HGH4hwtsp/qd/kiPaG5/2FHukISVVg6umqg1
nMzEbdZZjhmlNvZx1UZLgu23wpIkhXXc4YKUTRKJV671bVQ/D5SEGU0u0aWh
ddx4oLdWg44V2SUw38ZdJcHtH2OezNFNXC2ORjogmg0xmvBy3TwgCWnlS5un
2bfw1+nq4SW07Ogrwf/eCV1JeOWgd6fvxxb+ni08lzuVHTmxFx9IUpKE2vtM
qjHhO/gZcxGP5XIO5O44yeUjLAnve/tdBBx28bbqXb9sc060eNfmHvBKgje1
R8lXoz18/f5gxcIoJ/q769b4jUMSKDX0vNpl9/En5hIulDe5UFbUm1pZNklw
DnCrUGIhQ9LPr3GuSXMjO5NDXRdZJaFf9ErUySQyxL73zX+sgxu9POZDWUOK
H+oVPH6diRxpvCqim4zkQWlf5c/KcEmC4eKhjbpUchRoXesrpMmLjojE6vbx
S4KGSKqFliAFqsFnhLPmeZFH9FnWKVFJSB6eTKQppkD2VxYvR5bxIfdzLMYR
CpIwzMhOa61PiRhojOp+BvKj8NRS40bS/ET0U7aV+1Ghw/HNHY6Mgmgy4Ezs
8FlJ0Hp1lGDCTIsU2zLjJG4S0PRHtTrnFklIio8U5HtPi6Yjzrbk+Yugn4WU
eYwLknCpbWPo1HU6FJPKm7GrQkRUQVqJA7xSQFtCbx9HzoDEnnwvplUQRcJh
+zXtV6RgSDc/NdWGGV2bOkX7xVQcMcpcD1IPlAZzm8OXypM5UIZ4k/fVUWkU
5FIm2fdADsSmaE5qiHOiSz1S7cyJMkjJck+1QkEevn565eNUz4neFj56qqYm
i/RDWjpZW+Vh9mnxS+cdLoSduNNKHS2HGrHylnUZRSC6igsw5fIi3cr58m/M
ikjLislaSk8FfP44aX09zoesmX/wCBYpItlkC5HQChVwY57OoKfhR7S+BaFE
QyUkKpsj466uCq/YtMOGggSQFarcVbdVRpTGAtlW5mqgOU1f2SQviL5987hB
2amMaj0UfM0H1eBrEZ/r0B9B9MFd6FCyuAryBLKJSRLPWtzrUUQOwgjXUE+J
iFNBowURz+IaNGDNxjoqjYeA9u2dpR++VEH2e7lnCb6asP2FUzujnYDa5z7t
6reroOg3dS2RIlrAf1ymQDlBBF3Zm3J4N6WCCFvenw/3a0Ht9JumYREi4i5b
5/TcUEE3YEuX5Z42kF00zvkcSkSlHziSc/dUUHi+/5zWaR0Ii2If3iRxkOR8
5vUvWyqofr+zW5qgCwln25I4ZETR+GX78xazKminMY5ZblIXRgVYTF+GiaKV
8gfVGZ0qKDc0vezSaz1oSFKV8voqii7caI/WK1NBOh/OXRGP0IfLj5Rs+vjF
kC2fBuf3MBXkYWaoZGFtANmnbkrcOSeGQjUXWmmMVFDF59K0QT5DMIy9GStZ
LIZQfL/xsUllRD1bE9U6ZgjOTfoMKn/FUGCuMEFXVxntVEefXSs1AserQ9cO
SIkjxdy44eZAJZTBvfRcPQCDF9rJjbu3xf9/L435kQcKyHr5GTVXMEBtsrDU
aLU4osE0fuXGyaMxj6mMxq8AVT1lf07+FEeONndZz7rIIVxt4BhR1Bj0NnLX
mLfFUV+ORlOPuCxq7eOKzg8wBvJj8q7vSTx5aney8nmXNLpkoxDbWmMMHfcm
BXVFJRBfnTfdu0AppLXk0ya8bwxjBhIzxrIS6BhFDZGeTBLxHPL9rWJoAgy0
k4XVJF3hv2KhoUhx5P1rf7g42AT+XWwqihWTQPkp9O/ur4misxVnJ40KTCAj
WnEwi1MCveb0PNpwjoj+CjUMvW0zgRbTg4qUu+Jo822bS2uGMFrgoQlbWDSB
HZNxik/D4ui4ymLYaUcB1FCtFdzNaAp75elh+6R52Kl6MGMvzovebzEWeoqY
wnbj/upAkjjCKcUHFmc50cUf0olI3hTu+WQOJp0SR6fTjvQw4GyIUt5lgULV
FH7w8Y3YCImjKLZa0ZcGjMhGQ7/XQ9kUqk/C8ysDYig5OizRl0CN8lv9D2hJ
m0LNuPGKdZoYYigNNS48uYcfV35R+56PFH92PV7ZTAxJyIh9l+pZxvMrjqb4
UZnCRofIRv59UWSQliQcFdqErW+U2H1tNYGt7Sff6fVEUUAqn/z3umks9Nsx
e48iE3h3PdRZqJ+IQlw97lW5rmHB+5/v/Y00gUJx3lv09ET03trKcKqfEgLs
LN1TpU3gR8NF6zhdEZT5xPnuhzpaWK7SVyhYM4aYmtV/7Q4E5L3E5RF6ghFu
OEjEhH8wBrdmi0KddCG0deI17cFuNqBaCH2tftoYytyfjy9O86EVk0G9+hhu
uGIwZckSAgAuDhZhzHxIq5dhqsSWB/ou0HmmmwJkr/APRaryor2qysxsel54
vBopGsoKwLoW+erNdW6E94wFmavwQXCxRw/VcQye81aeK8rnQt11vh0jeXyw
9GGLrG/OCNT/DnzJbeNE2x8drwAVP9Q/0SVeSzICj36Lbz9kORD9lxw2slR+
eBhwwP/nV0OgnB68nenAjoDu4QNRxA9P/JVvDQeQ9l0tJu7xHxsSH9YbiP/N
D0IVcWvqvIbQZpkqN/YfK6KseVwassYPTWEv2eZwA1AKrOH5QMuCdKniLKTI
BKDFtvkHp48BpAdvfHwdy4RaHh/iq97nh6s89hfK+AyAPXn+/l8GRlRV0X7I
jJSnNG/GuuazPoCdme+D+/To4rOnZJ3j/JAdYXdfO0wfklqvbf+Sp0ORm16d
p7/ywzkLThERFX2YumshMdhMg5ocDxFQGT94SX6e9ZjUg+xDaYaPfKiRJPVR
pZEEfliNeD9A81QP7PYeO8a3UCAW9zRqN01+IA49e8wuqAfe7HQJky3buH1+
Tze9Lx/c85cLypPRhWsqrwXmp//g8r/mk4hNPBDy5qNw5UNteLyVRVxWGMWf
xoTc8LrHA5mG7i39/tqg88sqb4jtJ65E00/91JMHZBx3G2wOagNfodm+Hm8b
/n1o+FIKJw8wOLtvs6xrgdlRBkx27hNWx71XZRnHDVlNHDwXL2iB9ftXJ5s4
OzCWGOZVLh9uiDs7ED9vpgX13v3jtkx9mNMH8qdfbLhh4WnacT8JLcjCzE91
W/3G0msiDZRluKHn5SM38wlNSNh6UFvPNY5l0d8P2uLlhuQar/30zyS+G7kv
4PJ9ApuQ/Ck8zsAN1RcLUz+VaoLEm+zjoWHT2B2xkP/+kXGD4v241q47mhBw
hoXnE/8sth6ymae2xQVixPN//n9/+Is7VSd2SuYxejbIyVvjghLdzPIr9pog
37xW8vf/7xdbfkQfIul5Ct03KY01wfSXa09U9xJWYe0op7jJBaWyTupOMppQ
uEXe84hxBdP9aWZstc8FVRuDhBg2TegZnL5wx/AfZpHgGp9Hxw37Zlp8lzY1
gFqI58Mr71XswvHLgzrc3PB9/pK77JgGNHusj7a9Xcfosu884dDhBs2Nc1GT
1RpAO/S9x6d/A3uz0NRz/Ag3RGnUs83nawDV6k5J2OomVpY78KDJgxtu8uaG
v0vVgClJjgeSUjtY0241uW4+N0SqfZx54qcBcdQM9W0aZOBSMRBeY8IDlRu2
Z7qVNIAMN/lkWU0G1pR/EnkCeWCV7rLneVENuBM4c0xEnxxaavYbz+TygG4A
m1UDlwbQzd6kO4ZRgA7xLs8VZl4IMo4JGtxVB8cIh80xRAHtgUnDhua8YNzR
FlSwog6Yxg2CmQklNATsqrXc5IUGS/uCg3/VQfpv23q7GRUIF8nW01DzAU+8
O5PIgDr4vbkwqdxEBWH9h549seSDmOYj/5y61MFOeuhbgzk1sC+1/uj4jw8c
2p/nxX1TB9fzInPpX6ihLXkw/fYAH0gf+PIv67M6CBStjTQfogEDYdfwT1L8
8IA+T7rwozqoCnkn+LbRwCcZm1Dvy/yQ0AnPihrV4eXsd+/7NrQgFyHF6NfE
D42TFfOFuDpMjRzQcuihhQDNsYpafgG4Nrg6UNKgDtuRZrQtZ+jAz97M2Mxf
AAp1HZ3fkvQ74UkXV4fpIPZi3K+VJgGoyuSJ7yLlifpWRzF3nh4Ql75ZJVEQ
BE0ul1K/V4d26vYJfIYeKv7JJwddF4SZfH6l/3/3t7NwN+D6JQbQcd37wjUg
CNqJP5I/fVGHzKrOYaUdBjj4+Ih2tK4QiHYcu/z//69x12viHYtlhK6b3Xee
PBSCVBueR/K9pPiB8S+hj5nArNDf94arMJQrpn/wm1SH94nMqn6yzMA6Opuy
2yQM3fndl5aX1IHh59XemLfMoE+d8Py1IgHuBtYVvyetL5f3PzL1PhbYvan1
XnqPABY3M9+68GtAHfOIuWsaG6g2X9t0syUCk99Th0OuGrCiIbiS8JMN/v4V
utUQT4Sr43RzY1c0QPzJFXEzWXYI/VsbRdVABKWTSZ5btzVAebkw3eE9O2k/
BVUMS4tCo+BexxukATbuIWZ+WxxA6Fp8HLwqCqwUC3SdOppwXqr7e5glJ1T4
0J3rkBKDu0f51L+R9m/fTV7bkQecwHhvxoznlBhknO/TcQnXhHSuOxwhOlxw
ZOXJan2FGFBebgq1btGERMZf7FgoN0gZu5zjOiMOCsX8/vvBWrBT8oDL5Qs3
ZEgw9FjcEIfAVRXTiDwtGJg8feY4Pw/wUDmt8uaIQ9rcA92QLi2o0aHttanm
ge+l0n86B8QBSllvvdDWhuhXDtzKtLywovLi3vl/4nB9hTDc5aMNS2/jj4af
IPXLvcdKPxkk4PehAUbTp9qQbm/1kXqRF7qoF5Q6FSVgSTH0UR2rDoz+d4Kf
2oAPAn+Jcm/oSoBi7vDiUwsdeNT96x5VHB9EXFvXPG0iAYOa2z9uRetA78QR
kz/tfKD1NiC95aAEaOPWtnb1OuBL8ck4jp8f9P2YaWTNJSBkUSVtaUMHQi93
K7S48IO65+2xI6YSMH3+4W0zTV1wNZd8nPyMH3ry5QQE9SXgQq1uvUqQLnAz
GEw9/8sPnYamn/yUJIDLuvT3g5e6sCa/8pZOUQAid5wL5YUlQIuZ9aTjnC60
lXwUHA0SgH/Z482S1BIQf4bzT4GKHjyoPZJhU0XS9b6L35wUB8Lxa9t0wXrA
3Mz0EzQFwfpQKR3/I3EYk3zs4rGlB1+uZZ70DBAEtu0Xsbq+4mCZ0upMaagP
p73ufLtcJAjzxGNhKdriYLchWbUdrg+o6QXDQxYhCBfe4VioEwOL/bepOmQG
sJOn0eRsIAQOSu9iBK6KAdO6VD0vZgBkD8k6vS4IwWfM6b938mLw5avSwYTr
BtC4NO1a90IIyIqcy8ZjRCG+ky3o7LIBVHNXX/vwVQj8Hz9v/CorChUFUeAo
ZwjsXD+NkyeEoPWPcMSvL0RoBLVDyi6GwFa3wbrPJAyBVwgD/JsiEJ4gQcj8
aAjiUbt94fzC4EbFMHNZRAS+CX74/mvZEHBVkcu+osIQlJqjE/y/Cs47nMr3
DeD2HsfenGNvzrHneyuy0leDQimbbDJSKSMpkgotRYjIyAhF3pck2QlFsmWX
vcfv/P69r+e6z3u/z/Pc9+dznXMdQ1GouuzgbCtqCMcel2bVSIrAL8HkJ422
IuAl7Tzw64ghTOmm/HGREIHTT4RZ8F7C0JXpUn/CxxC0hgQSLoiIAOy0mZqG
CkG6hpbByyRD6Ams+fGWUwTEz42lUl4XhLO9/7mVFhmCfhS78BlqEbCh+qcm
FCsAUhPyXoFfDSGlYSPy3D9h6Dt/8oVLHD8QNroufR81hHn+e1xtfcLwtYpf
uzCOD1w4GPvb1w3hZh/vStl7Yeg5vJzedJOXvM+Kug4MCCQxv5uVfCwMv3rT
6WPInNl5KPJIBC8CgucMnLSDhKFUz4SqJIYbbLcVc5QICJgzJznTmwkDVRi+
iiuWC3xeP2O4KovAPGe0f4mAMIQFFFpfiuOEmc+7zAGKCMzE5o5bTwnBtfNv
+u8mcIDoj/M3+JQQoN4hXmEvFQLXiCYCdwoOHipQssfKI/DS5c5ZjjAh2KZn
iXAzYodtalOJFkkEDCLybK/rCIFjI4TyuLLCisW+GqUwAq2lgpGxm+RzS/ej
xeU+M6idtD91GIfAOudwlVWFIPxXesfOo4URAhIFiwspEaCtWvjJ6CsIOO1C
VAjHAJ5doXkOi4bAtH1+Y1pcELQoaN+5u9BBNV+8YMCgISho6Uf0xQlAfIPy
YLcGNdApZX75j7wv1251LpmT+U8gI7EIqaSExrlbIRceGIKf8lG+glF+COrJ
XPhxhAI8mJxonEIMgftcUcOeOj/gX+cfyKrvIGkmYrOYhiEYHnL/da2VF56F
rIVNCi8j5r1EpR/ZBtD0pWF32I8XPKTDxh2VFpEs+pk65KoBMI4zSdVw8EJf
ZPSlOXQeMaa71JJ/0gDaW+6b3rPlgZ/8lmfdT/5Bvn9YsNk60Ie9J6OluqP/
/3+beo4H6z8Rtw/RhhHH9eGJtoXpNnn/9o8YYHe1e5GTkhE+c5L6MEicLvaV
44LUlG+NkvPfEImaWmWZTT3oVX1BP3+JE96OGjQJEL8ib5ouJ5m+0APBu/5q
qsKcoHVG/dRrzs+I9CgVu1Ug+b43wuDTRg6wI80YeVfVIy9i8iTPG+vBkZRw
n0MCHIC1rfy2OfkB0V97dGdwVheqP5aJaLfiIK1mZzLybxVy72ts1+l6XTAJ
L2UMj8TBF6uTJs9fVSJj4tUKtI914dpTclQNB5Yc/65+8a5EvK85fJ7z04Xg
+bnfwt3scLbt5ZidehUyFFL9j+MIuY8lab/YAXZgy1Hx/rtcjYxnUbpeE9GF
q1yL5d1lbKA+k+oa8qwGUZxrllRb04HLTSVx72TYYEbLalFNHEWmnVcztdp1
yP2uMuFdBit0hQsKjH+sR55N4dGkVzpwb0SRbUyQFQRk07KeHmtECi7n9ehF
6oBCZmad2RMW0PJqp1wy+IL8Cl7qMDqtA8OPttaWMpjhwnJL12nJDqR2b2fQ
iUkHQmZ/nXzaywiEVLpkxy8/EMr//lvAh2hDPfsR6gRvRnhhSks7YjaAnJnn
rmmy1ga2auukWRpGSGs3crScHkTOePXLdylqQ9y4aMOmEQP0nKlqETQYRQYt
bYfY/miBfZxFMmmSDuxFJi3TLkwhjDw2/nrntEDDToNqpo0GWKxi9aSrlxH+
22XzAo6akPqy4vfDxzSgF6eumFmwgsz8168yj2jCqV/vb/l60IDt2o7c7cxV
JLN2gl1MXBN6okLP3GejAea+xWKbtHWkcZnqRO6UBkitLIe0/6EGmpv3d3jS
NpDjGu052+S5n/D5ir1wAzVYaYf1Uj3ZRAZjNe6WFGuAUDf9nb4oakiiGJ42
er2NrHQ7dOqFkTlf4r2Iujs1fBvNZ0qq2EE4fWc/c53VgN07dgfxVtTQvJR1
e+PTLkLjFnrZiuwL0QoxZfuS1PBoYIBDc34f2fMot51m0QCGjxm/OXmoQYpN
azGRigL+s1H+ZrFC5nY/M21aBmrIZmegfp5MAUzH6+s4BtShLvvVduceFZzp
9Ns8jqcEttAbrIb16kBV/yLGd50KmjpVdcpLKWGwLe1j12t1eBe2+OrnEhV4
XD698NWYCrKqaKhbk9VhRsrEkmWRCn67bN3K6KcC85NvhJQvq8NY1NV8avL6
5QJFX8MAcn2DZu47ZH57ZhXk/mGVCsTv/SCVMdCAfBoEqluqA9/siLbiDpn/
XeQe02XTwMtn9N0D6uqwe/KppQ0NNfDddXcyQ2hhK8Twv0VRdTh1PcoEFaUG
c6qR5a/X6CCf3v5EwKoaUHT9ntpSoQbeE8ebpPD0cEU6dn9omMyxWiEvhw9T
g5k2ZUheIz14RWUgn1vVIPSIwFBWMDVcvF2UcIabEQq4h6WpXqmBOl74zuAy
NQQKBw7LdjED9VmPsoRzanBe9/Wnx8I08FfIbhlLYQFGLUqZXEs1mERD7vuY
0wAT+37wpbOs8F4oNN9LVw0O39SpdyikAX+ne9vX1thgv9l5cF9ADVgdU6jC
H9HC9puAGF5ZDuBfzPmwOUqCpflLlcwDtCAxMuk68IgD/n7Ve/CvlwT1RJ6/
DWJ0YNPnwx/MyAndslZGH1tI8HEwuT23gg6G0sVTDZc5QWxetmizkgRUUYR3
/dT0QH1GtOCKFxf0NX+5EVJMAl3ne4f0bemByqlLJnuMC7QrS//8ySVBYO7O
o+c0DJA0dK+kboAbNgVyf395SgL616Lc2RcYQKH23KdyOx7wZssRNk8jwabW
wo1JlAHeOPxseDTAA/2ei89GH5CAX+iprKc4I+hnB97xOscLDjkcqU+TScBw
dW1QKZ4RGM/f+Soxxgu6LMX0kfdIkGX0TU5niRFyuzlyUE8+CL81oJhGjlPH
VTxLPMcEd7+NG2gu8UFcBNFwgZwnEOcfIN/OBAzrJrWRV/ghoZvny92HJLi/
O1BMpnPIG+/Ju0MvAJJsp7ajH5FArGtGxLySGRicB9IsUgUgr3ZB9Gc6CdxT
1aNbVVhAxtafvkRSEDw/sEQ9zibBjYfbm+WKrGCDjAWwmwlBzAtmpTvvSECT
8PnyFyt2CP/GWER4IQIblwY/xM6T4CSTUJnwEDvkvz5qyKwpCid7N5xv7pNg
uI+vqEMbB1xnxYYedYjCJbftiROcanCd4932RhcOhi8Sbl6gwMOQz8ZuLKIG
dmc/WAlxcYJbs/HyaSIB/vZNciSVqgGuU+8h3oMT/rjda7t5lQBuw/Pz+mRv
rfeXiwiq5YTalsLOtSYCPJ5978uxoQYdnN5dHy5ywb9RhfaBM+Iw05V13txE
HeoNOQQHvnODmcoOO5u3BLTd+Wz3fFcd/KkvnDNQ5YFcN9vOFwUScJink0pU
VQO+BY18PHyXB+4NL4aUkfm5eOa67pibBvA2M4/Wm/HCIdME2VN2ktD7LbFC
8qcGvI2muryRywstI0eMbO5KAsbRNvyQWxPuio3uH6XlA4+O2hHsoyTIvQ+N
kDupCYVb0dMf6vlA25JVtJhTCnx6xUsS+jRh56yv+g0xfri4qt31RFMKtntS
StWEtKDOkS6/7io/lOwcT2+0kYKdn6cXqpy0QPd7xXXTfn74WhsxN+4vBWK/
00j7+VpASHS+OKMuAJ10yjnFsVJgnb1DO72iBSNIrVjQPQHIvj95d/ChFHxL
JEjbINog/wWJLZwWAKfDfy3knkvBtYP8L2KJ2mDYdO+dMwjC4hTLyvFMKVjJ
OhmKH9AGOuqMX2fTBIF7J6yMn7zedr5JUEFOB4jYMP/YhCB0c6Yw4lOk4KBs
nAcL1gEPMX6XGKIQuPSvhGvflAKnN5xec3U6cDEyvQhH9nPT52XHDAKk4NMb
jpEbTLrwiPf2Z7tGIYgtuxHPTK63d6Uk5qStLiS3EIWVmYRB7UUPb7yaFBz7
LnZCLUsX/H0rJM9ZCcNq0I3R58zkemsSg/4u6JLnxYEOU6swPN4yknZ4LQmM
386MyMbqAdOFYyQ5WhG4HeQ0t+UjCc1wYG7QoQdzyVuSk3oiMNpzP1tUQRLC
SvCxZ/j0gSrm5WIU+dxHa0ZpGKZIQAtaIdX0Sh901L0yWFtEoPwmP50fIgFp
Z57wFszqAwTZeyQuicDNuJ9BSRPiwEl3+ny1kgEo3lbJ+KYmCkzyucSLIuKg
nXH98fUiA3hmT5Vsc0wUHqdXl6WXEkDyVLJI94wBxJzaoDFzFQWuuizRYiBA
1fGKymgJsqdsUDMnh4gCTWWezN8WPBi+wOm62huCdvOeGl+0KOh7b0eXWuMh
PkQ71ZLsIyEk6vLW26JwhO784/wcMSgVFf/OgRqCnM92yYtEURDh4tYPyhQF
3Y80NQ/mDeFW4E++uDuicPqTunhCKrnu1WeVxWSP8BX8onklRhSM92T7vsYK
g0Bw+V1zAwQeWvjiroaJgnIkHmP2FwK7Uo05ywsI2C05utxxF4V6vQZbNRtB
yMbOXMy6jsCd2lyfQmtRcIv36pfWFgDk/lyc4TMESr1ueM5riMLT006FHfz8
kLI9ROAtR+CGuUb5GV5y/tkfelybvKDeHP9R4gsCXue2WqmXRSCBbaDkVx8P
5O1rJbj/QMA4h6af+qsIbD38RMtSyQ3izjf+jo4jYHZTHB/8TASWioQOxaRx
QUKnDtuLeQSW1jtp/L1EYOA/8RrBy+Q5wpRenruEQP1FpXF+NRHobjm/nOXI
AV1tWUdZVhAor/gvO2VTGCw+cWxPmOKgyizOZGwRgcIFuduMH4TByOAmycCb
DQrk6veQOQQ4TO97vQwTBreW9iDa4yxw8pN/PzKGwM7HozfjicIg4lTnFXCI
CQ5xnOA56EXgaffTyYOnQjD7LO7qxFE6aCr49lu/AgFNQwbTZQsheM+gKUvr
SQOuBznClBnk+FX/hI0NQeD8memx/oAKAuYzA9hvIeCqLi7IYiEIN3glNhI1
9xFxBs6+nP/IXkZK4CH28EP9g22LfwzLiKJ9M4nxiyH4CuWW3Qzih6Px3RHC
VX+Rb9YGBxczDeHXcb+nKez8UKbkbZD9egYZbOncsA43BLVoq+TCI3zQw3t4
bt5/BDEJnTI1kDQEFZdqbvZiHkjIKadVeJuHHOI2xDsEkM/5Pdmxm6Y8oCpp
Z7i69hrl2dvPf21kAH/EaL7KjXJDJi3rlSaberTu8CnKSE4DOF9rtPKAhxum
+4SmsrS7UR0WxxGJcn34/pxEqCJ7qXVgrIhd5jCKBgRHvl/Wg2OVoYE2MmSv
iWyZ3ZgfQfl39tMzPulBvXzXEb6vHLBMrG6o/jmK1m6P4vJT9KALkeDk8uGA
VU3C/RepY+hZwpW5UTc94GPYR8/hOMBnhZ2yT2oclcpQJ9ho6cHVV1rBTJU4
8OInJd9MGEd991MusDDqwaDf1xb5czgoP6U82No8jtZmhVvhfumC1Om7Mx20
5DnIy69YNzyOjjN0JHoW6cJ/GRZ5TBfYQbpfcM+1exwVTKmoErqhC/ZDDjcr
q9iA0//rWG3WOEp/lfuJykldyO9S2q/mZIMKm83b5SfG0Ur+IOF8aV3w4axZ
kQ5kBV2bjGrpiTHU7eY198RtHSB81qHl+s4CF7X3qybPjKE4AfetwQ4d2F9L
pr2rzQKJJf3zb8pG0ZdXbR49z9aBMYkb+1kvmWHz1sVN6ZUR9Mnn9cSucB2w
4cra7YhkAsenwUlC54bQ483i6ENJHZipJbmvLzOCXXie/b8zg2jrmW4G6R1t
2M2Ifjp4kRFURfNHCMoD6DFK7y7lbm0YgaQvq24MUJlqRMXs34umWXz7kx2l
DbGHLCv9btNBKvZjAs//Gc1eE1P6v9cIBqYHvYymBpc/7G+lnDoQ83COvoVP
mlDh+OHbPpEatGOeH6ct7EaaWgfzbr3UhOo63/3+CSrgzBNkFlfrQ34Zp7fG
XdcElfyAvbFTVMCfvt1+2uk38iCfLbxEXxNE/L+GSp6jhAOG7EMfef8gacf4
E+NqyN5BOJg4LUMJrbMCvdnbU0ja1/xO6XQNKM+801G1SgGbgm2v3MdmkCmq
/4bEr2lAXEkgdc9jCuD6+O+M4scFZHq9l04BNCA2T+6lGy0FFIRJ/LnauYzQ
5v6V8WpRhz+0QnXNnQfIk5t/Ct26VpBjvaY/e4rUQX9SQT3m6QHC97BkHfm+
ijA0lNM9vq8O98z+8czCAUJYwN7QDK8ju/9lPJO0VwdXbucrIcIHyETw7++c
0xsI5fw3sb+G6qB48OLalb19ZDbIOOLMyiay83n/GLukOlRpZP342LmPXCf0
VC/gdpC3Y88N7P+pQYP9a4ohbB/5V7DxIEBiF3F4Rz8Q26sGal2dP42q9hHn
i+1bKdp7SOvzeRxjrRoIWjAU/i7bR9x2GCDCeh9Z/6aZP5WlBqIPC3+8Kifn
yRwZQ7wPEF0hUx/CHTXoZfbkSH6/jwT8CqCLNaYAdCPtVFWgGnAtalk9bNxH
6n9QxO30UIBFp8KdAjs1kDZZS8jt2Ueef/yYwe9BCedoRzR3jdRgeDzjcf3M
PhJMLSr3d5sSRFPvvCySV4NYO8r+Y3QHyMYdwegTz6kgIZL3/XcONTD7e6in
SvYAkX+Hi/5rRA0Pc5+b+W2RwG5uJYLq+gFiNm/bqfWABhSob7xkJHsE416F
zy1tChiddj6BP0EPIU9aPCUCSSDRiSRSOFKA61t/TwtGBki9eilM4ywJQjPL
756Lo4Bh5+q5e58YyFzIJ/7dlASOobGmX4cpYKyEcDBpxARN1KIrGJ4EIpEU
gqXvKEEmIliC3YsVpHTrGcb6ibACK81Jy5TQRWvs5aLPBhmNZqstX4kQer0m
/yKJCvZkGeo/cbHDKtfUQ7cPRIin9HuvVkMFG7RXu+564EBQq/F883MiBLtJ
XFQie2JcalHgq34cqI6eePo8mQirMcd0Da2p4QkFWr1tRfasY2U5hrFE4BRK
uNewRA0JsfffJBtwggfXG3YqPyIoZW2lmJjSwKM537/T1ZxgfMfIWt2VCCPP
HuTsZ9BA3GjoTJEmF0h9WBE54UCEyI3XveoOtPDgl8Nstg43xL9dCL10lAiK
/8We/fSRFgzD+U0n67hBMvw2S+IRIuTylGcXSNDBwdWghfIjPMBxKgHeGRGB
z4v26UoiHSSebnzG/Y0HfpZavt82IALJ7I1G3hYdvP7zPYDZkRe2mZmsPfSI
8B9Fk06HFz1U/jaUeLLAC9YEg/d0ukS4mBN4MvA3PVRrGV34eJ2P7G8jUxM6
5Pc2V6P45BQD2LjfvxzGzQ/RCa1TrOQ8tg9jh606GYCGc8Gs4Q0/+Ms4liSR
P3fu/lnqR1aMwMErUJVqIgDfT069u0R+TtkRI6WrnYxwQXD1ycyoAKhVpoe2
k+u6snODUmOICdqq1P8bIghBubkKJ86WCHpfch9zeTNDr1HzN/vPQjDVnP2G
7wIRnpy/JvFqhxlqwsK3uLyF4VGAy+82byLUCARszMqwwmKQkkVTrQgcG/3c
fj2eCAwJEptsRezA0zCGf66LB5v1zbiun0Q4GOhvbFbAAbd8coHNQzxYU7pd
YVkmAlQm2/yKxkEA7qZR5DweOLEU9ghWEsjPMHxx1OSAlY1bnWkZBNB2GadT
siTBeV8kcaGUzD22AyumNBIgXVpnVjZOgvWTbr5jCzzwXd+/ICBNCj68njV4
kqIOKTceuH8/wQs0hq+9fPulYDTJz6e+Wx2Cp0bi/v99zfA3gePeAtKw1+mV
as+lAaEVOk2BsXxwzn0oXuOeNEzqdqV+fqYB3Uk0Ye2zfHDvIOq4S6M04Cuu
VcaOa0CvZCGD7HF++LVilXRqTRqO8O+G3lXSBEJFuL+aiACwh7IYapjLwBal
vI5GsyaccbZC70QLQC9rtOg1bxmQMjzbkMevBbPnV88rTwlApGPsL914GXBu
nhFn9taCKd8fi3NkLpLwWTIQzpABSVLjAoKS1z8aL79XJAh9YUm4rhIZuODJ
bSTJow0TSRMNY2xC4JcWtsXwQQYQ2nmWZB9t+H0fl1jkJwRBCkV1ER9lIIdd
6YfdZ214fJVGqrJNCDQikqOH3svAtZCQ+hNiOmDvlq9VLysMPt71u0vFMjDg
G4aYRejAJbuY1AfRwuS5ln87NF0GHH65HqXt04H4qy635vuFQV6X8axmtAyI
TLN9/I+kC+yWxD/JyiLwVGWBgeKCDLCV4c7PJemCb3z5ONwQAdPi9rZCDRlQ
JOVhj+Z04Vdee+rHDhEI3uO3EaKWger0wmxOMz3Ix5+1bBYQhZ39ZZxWszRc
z0py5M3Rg0DaJ+H3ckThpqN8vKWONNx4fRz31E4fBNKPeHWPi0LxuyMtlpNS
QLPMkx9Xpg85vNp2paJiEHqu0YPxthQkh+Dr+hgNgLlTwcUlTgzi0yNfmFZL
wuyT20khZQagMODh314mBo+NzWmVjSXB3aJ2V4XaEOiSdI5RDYhBJhfnQnqz
BKwfe/lL+rgh4Awzj7Oz4GHRRbDzfK04PE8bCHs3bgiuBRf2z/LhodA5/GGY
ojg8+R3I1yqDQGT/ADSK4eHvJZHA52kEMH6ZqCDoiYD8h9MftKTwwNJ+etdy
Bw9qV29leecgcO8S416hDB78L1pH0Tvg4evuL92kQQQKnPUPhMjxgNvJiZU+
YiB7QGqVZwDQC/xdel0CD4wqx3+XCYmS/VV/sF0M4KibclWvMB5EeFeqSY3C
sPU+2ASvATDTVZUmyoWHFSaROh8PIUgPzDjMYwbA467/6RwdHt7IxAY+pxME
1V4D/+wzAH0em82kBTFwejGVTp3ND2ZjEfcb3QFUaq7bv/siBjEyZ4KHDPgg
5XItZ2gQwO/XLDfs08XAvfrLjYs/eUCUk/dY9RUA+/F36Yi3GOgXmuQMBXMD
P1vA6XvRAJv3Qk/HqYsBTQHT2kUOLvCNejhKeQugtEinzGZTFCbetPNolHHA
86h/cwK3AWxKfK36K8l+6nfwx+Y0DlYGLKwn4gHONDW8hABR2K+pOVFOzQYf
aeLMAuIA/v7NDUIlReGUUuKzUDdmwKVYVnRGAXioOXck9oiA663Uyy29DKDW
KxXOS35OQvJe79h1EVCnbidesKWDfp6kM/bkuliFlZ7uS4vA2eibb+umqaEr
XG+4zIOs19XWumItwnB9TK/PLIkSRGL4O7UdADaUvsuF0AoDS3muhqzKNuL3
7GSShgEA7VP+StUXQiD/7VxK6vYawlW0EjqmADD76fKfXTUhuBWRqSG3uoQo
vZS8LStAfs+l3/P6TwuCVdTSMdv5CSSy0/f40DACVco20+zx/FA0Vmy4N1SP
UmpVuteKIyD8leHgLR0/5CwOD19/1IOa1DV9QeYMgSqFWHWS3PfEN04fe+k4
jPpzvF73KDOEttvBHi3XeKH24E5Gp9IM+t2W2eqmAdm/RJ5tKW7zQGTlfXuR
YwvoG+UTV0YpDWG40py2OJQHkn911B+LXUQF24Ot3342gMlL2AB1IDfoFAtL
yhWtoNmJZdNWRw2AFCe1bvmPCyrAkSphdxXlez3P4MluAH4y48uP/bjgs93F
2tv4dZSHUjU+oVsfPLD+bxSBnBBgL2p59+8GGjbwQMqJfN8bBSadg1Y5IK+j
hK0yfRPdrH7cZiyiD+8RHva0yxywKWTy/IPMFso3p0CROqoH/SM+80kUHMCH
eY7k3d9CP/J87XTJ1YN/1iGMV2/j4LKj0qcbg1toyHM+A8xbD5ScG1kiuHFA
LdyGA6ZtNEXlcnwVUQ8kXUbRw4fZwd3s4n6X8Da6n/76xKlNXUh8LGDA7cwG
t6RkGLl4t9EtgcLSDFQXxjfaDifeZIVah1D+7xtb6GdrgZeZt3QhXAH7117E
AiLszCMdn7bQ6PvvK89a68LDi3XrawPM0DBX0/X2yhbq5zi49ENAF0pny8DG
mAmuRRoWXnpHrncnP4enRAeOTm5nl9xghHQ6/5yjupvodW9n4gC5b6+dqH2j
1cAA0lbpvFtvN9AGRfBxNtUBj1AXi/lT9HB3Lb97JHwddW0b9qge04ZCk+wd
2vc0oLmu0x/zYAWtR5vCNMS1QXdgrZ1KjAYueibjcU3L6OLl92k/VrRgqf0W
TuQONdinMN/4tLKEXpw6pCfdpAXH9zbLw/3JvjP7Tf8BLKJsgWXa1T5aMPR+
7J5oCAV0NDPkyjrPoPxZzZ4a9ZpwqzNvyrdqG3kz/rsoD+lF/ROmq2djNGA6
8wkNE9824pvEePRt4jfUVluj4YKjBgwIsXLeitxCTB6G3vtT2YrOBt6INtbR
gM4u88MRrpsIW8XLxsj99+jbuIY880V1WH7Pt4XeWkem+WZRTSKGCLomB1G7
qIO1zGHfQcI6IveiwoQj4AvC2NbY8ALUgcKojPpRwxpicEGsj7+gA+n33phJ
EVWHxV9a9rZ8a8i9PHPHifg+ZKJSxCDhlxqkdiaUHWJaRUzrbFVGA8aQjONE
qstkX+CU6CJG9K0g6iMrTu5qEwi/5NFiW101oMaGj/C/XkHqt1K4z6xPIvvG
g5eihdQAlcYcJB1WkDdfmGOLImeQPELBWv0QCQ5AttxZfwVBeG93FRvPIUJf
OMt7MBJsHZlxzxdfQVxlTvXasywg3ZoNeWrZJMipO7W7t7eMHPFhnWQ6voic
YmSy7fUkwclcdcqp5WWkvro+NEB7CXn2+tUS31FyHpP1O3fnl5EDVe9NN8Iy
MmUUGpirQgLFB5dqx2aXEUu5+1WiLCvIXbY9liguEthco+b5ubCMHOqJ8OzY
XEEmODupXm8Qofbz0taFtWXk+Z78t4KpVaTkMF+V0CCZk2WzNIIoV5DMt3jl
uZ9ryF3GifxBjAjvkk0nKDhXkMgMHe4vbetIRreD09wrMp/rMA/QyKwg9HUv
OsM/bSDWhcPPzBKIsBP/GBcGKwhJTuer3sdN5MQVSdW1ACIcnm6/ae24grh5
e/pZfthC0jTE15bIfBujH+wunbeCxD1QsTVFdxC+5qtaIxJEeBg+mKHgu4rY
MzHn1OwcIDc//OOsqFeFFOoH1Y/zVxHvyvjNgAQKqBwUS6UtUIW0gOO5XrOr
SDE4zL0VogQO9XM9ZQ9UYXTIUOb45TWEumtb/osxFYQb3jkl56YK/7raKkXb
15G2xP6bJz7SQNq0inMLmyosxhQk31faQIbuXGM87koLcl+F8q6sqgCN77eT
1Q82kIhCmQhZdjr48Pn0lHGbCpC2aoJdvTeRmRVHV+pAevikr3Q/PVIFCOcV
5LTObCNxDhdrR72YYMed8Mv4nzI4tK47WoxsIx5aeex4dWY4ZHW+QqJDGSQY
iSVlvjvIJpdwXTQ1C3DRcUwrFitD45gvx+zjXSScLSTiQhkr8Hw+XrkQqAyS
c+4Z1OoHSHqgdFNaAQ7kPsCPp4zK4Ok6Z/515gAJ7fG+8UKaA+xiwnz0VpSg
4PhV3PQJChARVDYee8UBfcEbhZeHlECPpyMnhZ8SbNIz0/2LOSHh1M1xvg9K
ELsQZ+50gxLexv5yHNHigjC1rZqMAiVI/rPnkjpHCTEneOR/NXLBUb+XKjzP
lWDL4d65yDYqSJyQgKoZbkhDhu+JxyvBvp5Rnt0hamB2ncqpjuKBIJ/3LvM3
lCCgaKp1uoYadKL3V2NFeOFKDK8v3VUleL7jexrRoQHbJa9o+Y+80M1JcyPh
shI4X1XkDfxAA8+tLW5WXOCD15mH1Z6Q4/74jKb7CC3YuL7kVGDgh4bOQOf/
yHn6z9tKvGumhTlVKnxaOTnupLjdHqUEYht0839t6CAt82XbrrMAjB+PfaBx
Rwn+cMafODFFBwOsuT3neQWhzIcuviBVCf5pyfJ+CqIHTbfomKP1gvCv7Ymg
frYSZO0nYcuUDMAw9722yF8I6JrSNivKlYDyppHRVwVGODubGVDZJwwcWYGv
h34rgbXJmw+fipmBzcKjyrNNDEheZyIW7ZWB2zO3PdOOBQazpko6zfCQSzHV
mBijDC/KfhWlM7ACKYOeY7AQD1Y4i2CNt8rgcTE5iymYDSYzGPQ3wgmAo2Hx
PsmrAi9IVDimjzjQVMrJdBKVgA8Kh+kNWVWhtId+DC/BAUirrWXNbQnI10Ne
8Kmrgvf+79kjCRywZWctcn9NAobrvXhzz6nCa5aiV6+cOCEzxvDadLskbCCm
t3XeqwJ+MikxRYobSsItlYcipMHFoHwnLoUI1/UOT+KeccO1E8Sc+nFpED91
8tGJ70RQc+ksUufkAeNjot68lmTfIdmeCOAhwSnuV/GstLyQwyMVn80lC6HK
6vhecj90HYw5VbjFB+uN5szEKDng1NJ3UJpVA1dK/wyey/xQij47nN4tB8ti
dnOhxupwvvXPAesWP9jH9qTwicmD/ffll8QsdRA+dvXnzy0BYLqtLKaWJw/S
D1qMaz00QGOupVA3QhCCbF5mNo/KQ0HhjxCXTg1Yi++pMd0WBKW7GbxneMhA
937dSVpXEyLS6ZtsN4XgSaNkAOKmALUMYj98yD4Y+Ne5szlEGIILoyZu3lCA
V36cm2kJWtDa92zx85IwhMmJjOc+UACzxRA/WUpt4KzY5tv3FgGGO59Z8c8U
QCl6j3cyXBt4RxtyhSdE4C5p70/oEwXYbzBvjFvWhlL3attWO1HwZPkxrH5X
AbIFY4598tWBQWJbwNs2UfD28BD7F6IAwalXEdNZHfid8L40QF8MGtYTfxmd
VACKXKLPBw9dqKzf6Ct+LQbLkUSfH5IKsJ53U+7jpC5Q2/LqxjHgYeCZkIb7
rDyYVpY7zLroQfw1e0jVxYNZVSlSni0PSbet3v0g85hsnPmX1Ed4kOtI415d
lIPQOH9U9Zc+yC44HpVrwMOLuok7rbFygBEvpZbZGIBvcJT36Awenkl3S8mw
yAGX+4948Q4DiFz8XM2uSoCILyKqgusyYFMmyDdRaQh3Gn9ako4RQE875Imu
nQyYUER8PiSNQMQr6Ov2JMAG/2OGlbfSoCA6o/TmPgLvKGNwHdcJsC6r8r1+
TwqsaftfFGwi4OJIq0/9kACa05/aNEEKntYRpbyUAKJ0zivaZBHAvWxJeCNc
EhZ3/uscJHM+7rv4xYIiAnR1i7jXvJaAI27GCdfJ/pL96UjiQgUBzq6pah7r
EodL08Q2ybcAVzICPVirCXAIa6a7s0i+d3j5Nzm9ANIMUz8rKgnwIzBe/806
Hmyd5HQebQNEpy3fdHtLgJAxRbqpeTFIv3ojIV7ICK4Q2MuEXhFg/jCjldWY
CBBz6X0ctI2gMS9YYiCFAPZZl10JXUIwSd06vm1tBNdfGQgVkOvlGd/goHkv
AI/45c7auxnBedVyi2duBHA+wzOblsEHf0Qel4eEGIGd0OHeT0cIYLHI8zY4
jgcws4cOx6OMYO/xwidEggCp22liUgFcMLq/XLQVbwTLVX4bqmSP/U2k4xY7
zwEOmxJj0YlGwNnQVlTXgYek6YJt/zdssDOe48VAjruna/DyvMDD9Q/np00K
meDHl7tnCm8ZgQe7zKCrFx6C4v+b7GmkA7Zch49p143gkxBb7pgq+b0cvtj/
Y5MKpPj2xleDjcCmOYH17owYTFDX9Zx4tI/oXkq4uelqBCpTRbbnJkXhRWKr
ydGyRWSxf9y72cAIXs35BDnai0L10w/qTM4TyI10rgM6aSOoTYp+JdgiAhTP
meujKLqQ+IbzuA5mI0htbXnf+kwYmvJbCP5Pf6N+R4PaJ7oAlmfuJ4uT+7uG
igXrVYVtdPCCfPB9UwDOK77jFP4CkPYrwVONfh8dcYq75C0O0NlN4Ihq4ofd
53yhhGYKDAs8LcSxhcCo2WclgWA+WNjICSnup8bU9R+phjoiYK0+mXC2nRu4
3/V3ah5hwL7eeH1RTsoQ1r06ukWluWFSwTj9LDsj9rbkn7XzDwN4fKDKevoG
F1j8mLOQq2HEOlKODajfMQDlwflzUrqcYHBL9xBWz4Tpe8V66S3rg6V7iJ/C
Uw54eSCmyYBnxq5NdpUX5ukDfmv4+a1dHAg4Xt6Z82DG+l3LmkiO+sDua+Xi
6oSDsg76WJ5nzFifxffcER59sEp7I9V5nx1cDQRdJGqYMZog38LPHXrwUQtD
XdzZAI6IC736yox9fVtxciFeD3yzonRRYAWXJRthoWZmbLehb///v9+jCd5n
5SSwQMWdn87rVcyYY8FVCwlKPZCn4NqOoWcGaeFvYalPmTF2Fl12XbJnhaQl
FGusMgL7S73QI4HMGOfr82yvInVB9v6b7zDFAPqBKMMRA2aMec6SwwXRBRO/
4pjXI3SgZadI1fyeCZs5f+9LS6MO2Weu2gpM0QIx02fO24cJK916Gn/xtg6M
KExFsqzSQKa8xvlMfibM7XR1pfl/OuD+qp/fm0AN/me3T5g6MWJKS267eUPa
YEYYVYu5f4Dsn355m+ErPWZV9FxmmUkbSnIM8/7zWUWeFewk3g2mwXgDZ0az
7mtC9LH03I2jK8gcQVDuEDcNFrxzJH/bUxNMsmOfu2ouIyYhw8rVldSYr8v1
gH+gCSO2dD0vxReR2Mrtyy8oqbH2lXz2x8saQLepXWFcMY0I01mvOJVTYuW7
boxHz2oAQX+8Z3T1D/JxxorjlDslpl2THbmopQGfAkzajh2eRMo5OAvZhSmx
6G71SAZuDXC7xbuD0o8hG/iycwrJFFhtez5tTLs6SGdT4R4b/0SMygvEdrQP
UEfRu/v6JupQbjJDcLrdi+iW3juS37GPPi0WEeOTJHvTOaqonLFuZMaUPiP/
4j7KQW0xa06tDu2M3uPBL1oRS/Nz/K3v9tB1547wkgayNyWl/dGbKkX4nkxN
mj3ZRcc5SkiGJmpQ8PRQwYRDFsI/fqjMxnkXtdoN+ZohrQawQdexneGGuH24
zTJM3EV3YrP5LRjUwERbgo7bvwRl7LHj8ZrYQdPOSb0KbiNBzP0ir/HMKnSG
1CB38csOepjb1GexmATFU1yyDudQNESz9db02x3U6bqXcOl9Evy0eyfbG/YJ
pVlxFZvI3EElucq+VlwigT3VdQ5jpS+oDKFo5OyjHfSMY0vC9mkSLMdo7lp0
taAGkkW8J1N20FrRxOwoPRIIrxXyqjl3oF9Hzt/6Ql4fdcXJ11yMBO33pi+L
L3ehmqZrVDUvd1BmrxHT49QkWFu6LTzyphsdYP8kqlK2g+q/OFX2eIoIksHy
+n8de9D6z7ddpb/uoI0fMXOxNiJ87nnjNM3ch0aNHwrI/rODZr5ZL5x4S4T1
dSmaPZt+lH86pNhQYxelyUr+KX+FCNues1rI6gAqKd0r4uG+i/5weXvyzQUi
LFiZXK5LGkQrzso4yr3YRe9nnV71OkIEKo77zPkfhlGhXSOzdMIeWuu3MfuS
kwg2VXP0+ftj6GMTWjGby/uoaMX0Q8piVbhQd6H4RNM4OpelZOk6so+azFLS
haeqQsnJZw/0kibQznDLaz7HDtCZYyY/lK+pgpMaxdcOsT8oySyo4IcYBbbc
+p3ighXZm+aYqNetZ9DmDw0UhfqUWNmwl2f7qArMHUx4qXEsopQDo98fqtJg
OsufGKgTlOHi7fimlJhF1HzquXtCBg1mNt58rspFGS6lEre2NxZRiakniZ84
abGbpt3x7AbK8Gez0vi/qSX0lmheizkdHSbjoVFUu6QEag+eQcT4Cvqy/YG1
uiQDZnzTvfCRixIMPJetdfZaRW+dRx4XVjFg9y4FUKwZKUH4v+uXLZZXUcez
d59KWjNi9+7+vEYgKAF+xvBWOus62ry7qR+bzISdTxktph1ThDBJ7rFd3010
xSuKTfkEK4bTjjEc9FOEx4RPwffZt9DcSvbqThwbRhE24JpyShE0xCT2tN9t
odbTCSIXetmwZ3YveZz1FGHwcM/wSdYd1FzgtImHNg77y44UeLMowqEVw3QO
bAdl8c1YXs/GYT8Wtm6h6wrwcfnYRFjYLmqs0OmCcnJgbGt0OPsxBXATO+33
c3UPZclI7NPf5sCCvAT6n35UgKEAgWBCzT5aPorr5wzmxPx/T8afL1KAh9vn
r76NO0A3FB4FuvzjxMaPKvXnvVCAnxYvZQmPKLBtC1b6d8tcmDztnb/0cQqQ
MhrUZ0lLicWznvvTc5kbC3e+sGtyVQHcR0/UeIdSYtizY1FFNDxYWd1I84lL
CpDqUoSmzlJi/7F9L7N6yINde2c9cMhPAfyuNPIMO1Fh+xm9/g1SvNhQ6spl
pYsKIO8ZuXV2kAr74zLSz1fLi2XwU4zJeyoA0aM1V9KeGtspfsFpb8uHGde9
PnqSHP+7c9/P8hc1Vv/zaGbKKh/WQjfVjpLzDPFXxv05T4MVmh5360zjx6oE
T/ck+isAq7UHA/M0DZa+dgTPYSCAiSEqmT9CFSA3ToC1I5gWI+zGJV+YEsAS
eEoCP5L5/ey/DZqYNDrMocX5traZEGbMdvLYj3QFKCqUN3iuRI/FWHvm1O0L
YVft27SsSxQgp9HCPK+ZHnv6oT3u5HthrL6OQX22UQEKDho//2BixPIE+c7d
0xXFTsR9oOHdVgAPlebI5Hpm7CBfMrTtHR4jTtAufEpWhAu7fVd4IlgwVx+5
9Cg8ARMjvtHJxxTBtMOqgkmLFWtJjfSeTSRg9e27qZRrilCHSSz61LFhPST9
6isXxbF72f697d5K8Gjkvsc3Sg5sqljhiImGJHbaaIfpwiOyJ0blC1wq5cYi
VRr/XhiRwcQd5R/+ZCSCorZWW6QeD8bSqJL/31lZzNTP60nYaSK4fPCUyP3C
gyW0Bxmy9slidDu3HKPyidAlXu/5bpIXC9HXJ9RjchiX3nCWqAMJHqZa0ZiH
8WFLXbQaCarymMqqp0DnBxI8u5eBs2Lix3Av5YabnsljPBcKDfFiatCjaXKl
Tk0A816OMupxUsC+68bxv1xTg3vfR4ILvgpgF1aVPTVqFLD2ExMo6qEOtzb9
zlJdEMQ8P6gJS7MqYoqj+h72Q+ow/KjoTmGiEBamzpKS/EgRW00tuBr3UwOK
qqlIluLCmLP5RUv/DkUMnKiCPjloQtdOi818JXmfjoyovdlWxM4F1J/oGNOE
3JvfJ2UsRDBBxuKZECElbM8r56ibrxYgqntbib9EsLdf8T10qkpYVmFarcaO
Fvgo59HkXRTFZF9MuDzRUsKsOqTiJhO0IfyRwMOddVFsrXElIJiohF1hFjNl
FdOBcYdOLuYbYli+hMm7KWElLPAy07J2hQ7EeQg8zKfCY8d/50qd3FLExPAb
j+ctdKH9nQtIH8Zj3gfmAkpNipjPTxXF9DFdKE+4bKsVhcdO5plErEcrYmey
ar9XRuiBVeLIGMUaHvv9kqZut0UBEwnqzn2Trw+39j5eVZYnYMpvZ/mbbRSw
zYWmHnXEABpLOIZ/ORCwjMOe42875bGRR1h0XLcBcCVOsBeWE7Af2g9+292X
wyT8zmsX/jOEJWNnAet+Ajb9ban7fb8sdsWmRoMjHIEhO/OtsG0ClsR9pTKU
Uxar5npr576DwPOdwMVryuLYDZk9097T0tijWlUd7nAAlzbzm/sgjmHGuef1
3aWwTKI/lwzZp7yOd/4wOyaOFSBGv2M9JbEcje5VnwmAY49XRQ1sxbFz+sLJ
I+clsMXriEI2txEQvLKvNZwRx5IVfDrTrcSxYPbAkSQwAnnDLfSLjTgm2vld
R1SNgDGfzLy572EEKZWHrA+R1wmEsWsPcOCxR1ctW5vvGMEXfH+8KiKOncbn
Txf0iWDCX5LXOl8bQb4B21qagjgmvV16TCtaCKvslo3YrzeCdziukBhOcexs
fyH3ZTkBjNJzwMuyzwjWCMazjKsEjHtLzyyxkxfjVHThqJw0ghtCQ1NHugjY
HMHY8FoYN8aoGtRgvmgE0QU8k2fzCNiSMvb6sCQnxnv/PyrBdSPweRZ4L+Qy
ATNMecZ7sZQdyzma6mS8YQRPtl/EYEcI2O2MYfl9ZWZMh8Gx5O+KEci1/f0X
xE7AigOkR5AmOkz01B3PI/NGIGjxYbnpOx4LVHCQr79Chb1gaPh0fcQI7hgx
rW8/xGNm6hdsjPJ20etCwpU9XeQ8t/KZjluT+5FP1xx19iqqe39pNeajEaS9
j8leuSqGfR3zNvpk34dq+N0u3iN7H21fuLjnkjD2u/OYBj9+FfmtdVyek4Xs
X/zHqYoOC2PNVM1mKY+2ELU8pYOOPwAma275Hx8IkfsLMaHxzT6idOGbFA4D
8AizafOVE8TOTs6Gm/+ghuan3SMC/gAxihqq0qZ8mASqw79exATuQuWpH+4g
sP08edbhKS8WtmycNTrODP+OdpXf1EVgPN4lhPUvD+bl+oK/ZIMFHnXzMYTO
GkKAkZMG62NujHDwLSgGZYMymaOH0ywNYYiBfWXsLxf2qjIyfyaUHTSn53vE
9gygM/pW8WFTLizb7zr/JUYc3NuoD4suMQB+3/bqq3sc2MlKDvOa6zgoagv+
eZTPAF6d5WSvcODAUnbi5IrzcfAnroz1T5s+6DCpf1evxWELoa7v4SsOgj5p
7tTE6EPlDuu2uBgOq06vkNQfxgHp/MyZ33r68GP+u50+IztGdG3ZdZ7HQdz0
3GWbNT2yR8Tcje1nxTJo2k8FLuEg7JFnm+JbPVCxqEu0KmHBxNuJpYL/cDAp
qpnt6aMHdJnZ8tgdZuxvEu868x8cJLxp0WOR1wMh3uyTe95MmIKMTut0Hw56
Xpr8xz+jC18Wv0viTzJiNCqFHlYNOKBKLxxJyNcFS1a1WAMg85OY18v21zhI
FeLSdPXWBaqzHIczFOmwojcdT4944eBzebkKcUUHshSiIeQYFfY881zWwB12
qPJbeh/LqQNGH96GFzlsoHt3L958dYUFmkQfRUXFa0H+llVY9uQaSjwiuF3L
zwL6T4PYPjhowb+zNTQMEatoovEdW6oqZuC523mmW0UL/I38vaXql9DEBwkN
FzaZIE9nq/X6gCbURbTkKMbMoDmuLMnLqYxgp2cAf7U1YeBtZcK8yhT65OVY
sK4xI4Dlk3+HODVhnv+a8cUF8kzBfgxmrjFA1Dxnpu482b+sXhuHPh5Bdb4f
nHNyZgCX8/VV2y81QFDJ+4Uf8g29IjbtweZBD4LydRtSZM9KpLcOP8zaisa3
Kx5tJtIDulHnsbmkDm6UVTXX2j+h80ltpKsU9PCaQyvYpEsdbBsv3b/hk4dG
8Qo7sBfQgU6ZeTckkT2rFv/6SNAVJPHTtAPjTTpAlgKuTPuqQ7xKx/KdrCLE
tmzvPcmVDo6OD1/ds1KHP5h/9zfWRoRl9fctXRU6IPk1f3dlJ+e/8wzrlWtB
8i9JmsgJ0QHx73p02aIabOcx29BwdiEK0eYEL2Y6yA5qpXbtVoPDTRLlkgfd
SLKWvRgFBR180336IqxCDVIOmwTp/u5FJGpw4qubtLCZJ5s/l6YGZ+pMrqsW
/UR+KxcnWqzTQilW+qbushrMRdXXzvn/QtbyrioykNcbOJfd+HdWDaIu+NlZ
Sw8h4g4jjcR9Wjg/hDFfAzXAT6/IZniOILrPGQdbGehgSfmkh7sk2R9Vkv3v
Do8if07YBk0K0EGLwhGFMFo1eJgXshtqPY74RfANPVClg32v9o+bf0hwIV/Y
Il78D8JUIXOpwY8O+Nj9Go++IfPGQMiRb7FTiNWBU/XxNDpQYP29KJpEgtCK
PGfb8WmkYkPp2r1PdGDhLxvvFEiCQbGaQMNHc4gNfb2uhgo96KjurOrokMDw
TEJsycI8YjDLZFvsSw9l7lxR30RIULK2NBRx6C/yd8OyfaOUHpb1c8oGqUjw
lH380MNLi0iP0QpO+igD1IUE8Z/qIPvaqa1rNsIrSL4XfSTSzAiaEa2UexeJ
ECMdqzP9ZQX590tQJV6TCWYsXs+6nyRCTbOr4rNLq4hTt7kl0xsmiItlTrDV
J0L6IbnRY91ryPd4+d2DXGZ47UA/1cNOhKPITxfrV5uI8N7uWOM8K2h9V55A
P6rCE5n/RLFf+4gtH3+p1SgHOJb5iK7oqEJk91ilU8UBQmqnwDH9xwnZ1B9s
aZVU4abXk9B+MwpQSPRWvI9xwvfqkS+7eFVI5j9pmalECQ+OOvoqlnDB3pCh
TQOzKuxfQe3WsinhVCTzgI0iN5xjSpJ7RaUK+ar4T+wiVBDT/4biUhE3iGqX
cyqvqcB8Emc1BT81sFRL5JXW8MDSK+xt8S8V8jx9f43lKTVU8rRND5nxws9Q
r+jr3SowymPhZCZGA74fzH6LDPDCZ+ZE/55WFZiSUBDpyKOBkKFK+0B/PnhT
Mcja+kUFRFAnQpUaLSQ+j10eYOCHprIbg1FNKmC3QlUk/IkWklf8HB1y+aH9
S/4OX7MKjDOZDPPa0kHsA7fSv6YCYLNa71rSpgIyhRaXPs7TwQGd66V7CwJg
yfNw+GKPChwO0GmRuUUPw49HqjQfCYJ3+uKB77AKlIUkxXhLMYAZ60OKH8ZC
MLHteWR4QQWSL9Q0Pf/CADVrDjindSGQ7A4YnjxQAcmWsydE+JmgkWmWfdxV
BNxKZuXf8KlC0dvhy3ZzLKCcxnNUTBMPnpGv7C0uqAKwJQ/OF7BC/GuOv1tP
8TC0dfSZdrgqRMiJmA77sUErtf1jZUoCFEb2UuQ9UIVXHY+TNylx8OvIyxCh
bwRI4wx29+xUhXB0FLl1EQe9mawxN3TFwcnBTOLvkioY7nz2M+7FgW+y3pn0
HHFQfWtCtOMjwt1m73b5Qxwwzz3Xqc0uAZWPSlobECL0LWg1kUo5gNJfS0ww
QgKCjfq+HvYmwv8A43ePnQ==
     "]]}},
  Axes->True,
  PlotRange->{{-10.081486937476729`, 
   12.674575984016016`}, {-16.994667772847304`, 24.532437498981242`}, {0., 
   45.9652468820461}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->None]], "Output",
 CellChangeTimes->{3.739283976696093*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"f83d140f-6583-44d8-aadc-26e24493e284"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further explorations", "Section",
 CellChangeTimes->{{3.70077612322993*^9, 3.7007761320921593`*^9}, {
  3.7007787731699142`*^9, 3.70077877480995*^9}, {3.735655649442748*^9, 
  3.735655649665411*^9}},ExpressionUUID->"9da19663-7179-45c9-8160-\
ad35832309c2"],

Cell["\<\
This is all part of a field of math and physics called Chaos Theory. Another \
related topic is Complex Systems, which are discrete systems with simple \
rules, but similarly complex results. \
\>", "Text",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
   3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, 
   3.705685608918363*^9, 3.716902605618763*^9, {3.739271743449622*^9, 
   3.739271811060205*^9}},ExpressionUUID->"45c45f6e-321c-4ce7-9657-\
950c1134d308"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author contact information", "Section",
 CellChangeTimes->{{3.736868777412567*^9, 
  3.736868791070746*^9}},ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-\
16569b36e665"],

Cell["kmconnel@ncsu.edu", "Text",
 CellChangeTimes->{{3.736868810717331*^9, 3.736868830235566*^9}, {
  3.739272081299082*^9, 
  3.7392720837369423`*^9}},ExpressionUUID->"44146aed-2d19-4c66-bfba-\
1e67f1c1dfb3"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1148, 758},
WindowMargins->{{137, Automatic}, {-58, Automatic}},
WindowStatusArea->None,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], PageWidth -> WindowWidth, ShowCellBracket -> False, 
    CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellElementSpacings -> {"ClosedGroupTopMargin" -> 150}, 
    CellGroupingRules -> {"TitleGrouping", 0}, PageBreakAbove -> True, 
    CellFrameMargins -> {{20, 50}, {6, 78}}, TextAlignment -> Left, 
    LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
    CounterIncrements -> {"Title"}, 
    CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
      "Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {"Subitem", 0}, {
      "Subsubitem", 0}, {"ItemNumbered", 0}, {"SubitemNumbered", 0}, {
      "SubsubitemNumbered", 0}}, MenuSortingValue -> 1100, MenuCommandKey -> 
    "1", FontFamily -> "Source Sans Pro", FontSize -> 44, 
    FontTracking -> -0.8, FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["Abstract"], PageWidth -> WindowWidth, ShowCellBracket -> False,
     ShowSelection -> True, CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellFrameMargins -> {{30, 40}, {24, 2}}, TextAlignment -> Left, 
    FontFamily -> "Source Sans Pro", FontSize -> 16, FontSlant -> "Italic", 
    FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["AuthorInfo"], PageWidth -> WindowWidth, 
    CellFrame -> {{0, 0}, {8, 0}}, ShowCellBracket -> True, ShowSelection -> 
    True, CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellFrameMargins -> {{30, 40}, {10, 4}}, CellFrameColor -> 
    RGBColor[0.988235, 0.403922, 0.0313725], TextAlignment -> Left, 
    FontFamily -> "Source Sans Pro", FontSize -> 17, FontWeight -> "SemiBold",
     FontSlant -> "Plain", FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Chapter"], ShowCellBracket -> False, 
       CellMargins -> {{20, 30}, {10, 45}}, 
       StyleKeyMapping -> {
        "Tab" -> "Subchapter", "Backspace" -> 
         "Title", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> "Title"}, 
       CellGroupingRules -> {"SectionGrouping", 10}, PageBreakBelow -> False, 
       LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
       CounterIncrements -> "Chapter", 
       CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
         "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1150, MenuCommandKey -> "2", FontFamily -> "Source Sans Pro", FontSize -> 
       34, FontTracking -> -0.5, FontColor -> 
       RGBColor[
        0.21176470588235294`, 0.21176470588235294`, 0.21176470588235294`]], 
      Cell[
       StyleData["Chapter", "Presentation"], 
       CellMargins -> {{67, Inherited}, {10, 15}}, LineSpacing -> {1, 16}, 
       FontSize -> 48], 
      Cell[
       StyleData["Chapter", "SlideShow"], 
       CellMargins -> {{
         0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 15}}, 
       LineSpacing -> {1, 2}, FontSize -> 48], 
      Cell[
       StyleData["Chapter", "Condensed"], CellMargins -> {{18, 10}, {5, 7}}, 
       FontSize -> 14], 
      Cell[
       StyleData["Chapter", "Printout"], 
       CellMargins -> {{10, Inherited}, {10, 15}}], 
      Cell[
       StyleData["Chapter", "PrintoutGray"], 
       CellMargins -> {{10, Inherited}, {10, 15}}]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> False, ShowCellBracket -> True, 
       CellMargins -> {{20, 30}, {10, 25}}, Evaluatable -> False, 
       CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> False, 
       CellChangeTimes -> {3.716825484342502*^9}, Hyphenation -> False, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "ItemNumbered", 0}}, AspectRatioFixed -> True, FontFamily -> 
       "Source Sans Pro", FontSize -> 28, FontTracking -> -0.5, FontColor -> 
       RGBColor[0.71375, 0.20785, 0.17255]], 
      Cell[
       StyleData["Section", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Section", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Section", "Printout", StyleDefinitions -> None]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], ShowCellBracket -> False, 
       CellMargins -> {{20, 30}, {6, 12}}, 
       CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> False, 
       Hyphenation -> False, LineSpacing -> {1, 1}, CounterIncrements -> 
       "Subsection", 
       CounterAssignments -> {{"Subsubsection", 0}, {"ItemNumbered", 0}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 23, FontTracking -> -0.5, 
       FontColor -> RGBColor[0.71375, 0.20785, 0.17255]], 
      Cell[
       StyleData["Subsection", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsection", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsection", "Printout", StyleDefinitions -> None]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], ShowCellBracket -> False, 
       CellMargins -> {{21, 21}, {2, 8}}, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> False, 
       Hyphenation -> False, LineSpacing -> {1, 1}, CounterIncrements -> 
       "Subsubsection", CounterAssignments -> {{"ItemNumbered", 0}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontTracking -> -0.5, 
       FontColor -> RGBColor[0.9254901960784314, 0.49019607843137253`, 0.2]], 
      Cell[
       StyleData["Subsubsection", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsubsection", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsubsection", "Printout", StyleDefinitions -> None]]}, 
     Closed]], 
   Cell[
    StyleData["FurtherExplorationSection"], CellFrame -> {{0, 0}, {0, 0.5}}, 
    ShowCellBracket -> False, CellMargins -> {{20, 30}, {4, 24}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, 
    CellFrameMargins -> {{0, 0}, {0, 22}}, CellFrameColor -> GrayLevel[0.8], 
    DefaultNewCellStyle -> "FurtherExploration", FontFamily -> 
    "Source Sans Pro", FontSize -> 18, 
    FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> 
    RGBColor[0.2784313725490196, 0.2784313725490196, 0.2784313725490196]], 
   Cell[
    StyleData["FurtherExploration", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{20, 10}, {2, 4}}, 
    ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", FontSize -> 
    16, FontColor -> RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["AuthorshipSection"], ShowCellBracket -> False, 
    CellMargins -> {{20, Inherited}, {4, 22}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, DefaultNewCellStyle -> 
    "FurtherExploration", FontFamily -> "Source Sans Pro", FontSize -> 18, 
    FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> 
    RGBColor[0.2784313725490196, 0.2784313725490196, 0.2784313725490196]], 
   Cell[
    StyleData["Authorship", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{20, 10}, {2, 4}}, 
    ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", FontSize -> 
    16, FontColor -> 
    RGBColor[0.4392156862745098, 0.4392156862745098, 0.4392156862745098]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], ShowCellBracket -> True, 
          CellMargins -> {{20, 10}, {6, 8}}, ReturnCreatesNewCell -> True, 
          DefaultNewCellStyle -> "Direction", FontSize -> 
          15, $CellContext`DefaultReturnCreatedCellStyle -> "Direction"], 
         Cell[
          StyleData["Text", "Presentation", StyleDefinitions -> None]], 
         Cell[
          StyleData["Text", "SlideShow", StyleDefinitions -> None]], 
         Cell[
          StyleData["Text", "Printout", StyleDefinitions -> None], 
          TextJustification -> 1.]}, Open]], 
      Cell[
       StyleData["CodeText", StyleDefinitions -> StyleData["Text"]], 
       CellMargins -> {{23, 10}, {3, 8}}, CellFrameLabelMargins -> 4, 
       MenuSortingValue -> 10000, MenuCommandKey -> "8", FontSize -> 15, 
       FontWeight -> "Plain", FontColor -> 
       GrayLevel[0.45], $CellContext`DefaultReturnCreatedCellStyle -> 
       "Input"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Input, Output and Graphics", "Section", 
       CellChangeTimes -> {3.7168930720372066`*^9}], 
      Cell[
       StyleData["Input"], CellMargins -> {{82, 10}, {5, 6}}, 
       StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
       AutoNumberFormatting -> False, FontSize -> 13], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{82, 10}, {7, 7}}, FontSize -> 
          13], 
         Cell[
          StyleData["InputOnly", "Presentation"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["InputOnly", "Condensed"], 
          CellMargins -> {{50, 10}, {2, 3}}], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}], 
         Cell[
          StyleData["InputOnly", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"]], 
         Cell[
          StyleData["Code", "Presentation"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["Code", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Code", "Condensed"], CellMargins -> {{50, 10}, {2, 3}}], 
         Cell[
          StyleData["Code", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}], 
         Cell[
          StyleData["Code", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{82, 10}, {10, 5}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "Presentation"], 
          CellMargins -> {{100, 10}, {15, 8}}], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {15, 8}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Output", "Condensed"], 
          CellMargins -> {{50, Inherited}, {3, 2}}], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{49, Inherited}, {9, 3}}], 
         Cell[
          StyleData["Output", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {9, 3}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["PlacedGraphics"], CellFrame -> False, ShowCellBracket -> 
          False, CellMargins -> {{82, 21}, {8, 10}}, CellGroupingRules -> 
          "GraphicsGrouping", CellHorizontalScrolling -> True, ShowCellLabel -> 
          False, TextAlignment -> Left, LineSpacing -> {1, 1}, 
          InsetBoxOptions -> {
           BaseStyle -> {CellFrame -> None, Background -> None}}], 
         Cell[
          StyleData[
          "PlacedGraphics", "Presentation", StyleDefinitions -> None]], 
         Cell[
          StyleData["PlacedGraphics", "SlideShow", StyleDefinitions -> None]], 
         Cell[
          StyleData["PlacedGraphics", "Printout", StyleDefinitions -> None]]},
         Closed]], 
      Cell[
       StyleData["CellLabel"], LineSpacing -> {1, 1}, AutoNumberFormatting -> 
       False, FontSize -> 9, FontSlant -> "Oblique"]}, Open]]}, Visible -> 
  False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 253, 4, 141, "Title",ExpressionUUID->"755e0098-9782-4df5-8299-7f54266c54d6"],
Cell[836, 28, 488, 9, 47, "Abstract",ExpressionUUID->"db4efd27-b72d-4835-a486-b18956bba0cb"],
Cell[1327, 39, 573, 8, 44, "AuthorInfo",ExpressionUUID->"59a63784-4e95-46b9-9a1d-2c013f47161b"],
Cell[1903, 49, 71, 0, 34, "Text",ExpressionUUID->"85271f44-5b04-421c-bf31-0395fab10c35"],
Cell[1977, 51, 921, 15, 57, "Text",ExpressionUUID->"bdc94ae3-2c9e-4f83-adb5-7aba501cbe90"],
Cell[CellGroupData[{
Cell[2923, 70, 474, 8, 71, "Section",ExpressionUUID->"35feb7e4-4e93-4e64-abc0-7b0b86e8128f"],
Cell[3400, 80, 403, 7, 57, "Text",ExpressionUUID->"55301b49-a91a-4c0d-9758-8f5b81888f70"],
Cell[3806, 89, 359, 7, 34, "Text",ExpressionUUID->"cbb6bce3-b71b-473d-807b-6a28ac475798"],
Cell[4168, 98, 422, 8, 57, "Text",ExpressionUUID->"54a61606-998c-4a61-8c71-df748f679360"],
Cell[CellGroupData[{
Cell[4615, 110, 4271, 109, 319, "Code",ExpressionUUID->"1dd30e8b-7542-46b3-adb7-733b69d92bda"],
Cell[8889, 221, 2736, 56, 543, "Output",ExpressionUUID->"32242772-cc87-49b4-8b80-d717cf45d95b"]
}, {2}]],
Cell[11637, 280, 373, 7, 57, "Text",ExpressionUUID->"fe5d42d4-a931-4300-8c6b-26c8bb9d024a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12047, 292, 184, 4, 71, "Section",ExpressionUUID->"bad39a97-def0-463d-bae9-7657a326aba0"],
Cell[12234, 298, 565, 12, 57, "Text",ExpressionUUID->"64f683cc-ca5b-43f2-b98b-8cae03f3b9b5"],
Cell[CellGroupData[{
Cell[12824, 314, 427, 8, 28, "Input",ExpressionUUID->"33036e05-d1de-4ddd-81e8-0a4a13158b9d"],
Cell[13254, 324, 404, 7, 32, "Output",ExpressionUUID->"116d9ba1-6832-4a33-9f65-c93d6f19910c"]
}, Open  ]],
Cell[13673, 334, 402, 8, 57, "Text",ExpressionUUID->"aaa8771b-5bb1-440c-9245-f84f1e9cb3ee"],
Cell[CellGroupData[{
Cell[14100, 346, 4373, 111, 319, "Code",ExpressionUUID->"2c79f975-3db6-4ee3-bee4-ab8fcf8c9704"],
Cell[18476, 459, 3171, 67, 543, "Output",ExpressionUUID->"bf889828-b577-4376-8734-cc7741f8c90b"]
}, {2}]],
Cell[21659, 529, 463, 9, 57, "Text",ExpressionUUID->"0e384fa0-deda-4be8-9713-8b5e655bc05a"],
Cell[CellGroupData[{
Cell[22147, 542, 436, 9, 28, "Input",ExpressionUUID->"360b0271-161e-449d-bc43-ba7bc939d766"],
Cell[22586, 553, 445, 9, 32, "Output",ExpressionUUID->"09c6af5e-92f3-4221-9a6f-0a87f23bc73b"]
}, Open  ]],
Cell[23046, 565, 434, 9, 57, "Text",ExpressionUUID->"5b14f74d-3f0d-4552-b969-173477823ec1"],
Cell[CellGroupData[{
Cell[23505, 578, 334, 7, 44, "Input",ExpressionUUID->"bba2132c-7c83-4101-9182-b2b5132d594c"],
Cell[23842, 587, 624, 14, 51, "Output",ExpressionUUID->"8e82a016-0668-4168-bd60-87c9db92f5e8"]
}, Open  ]],
Cell[24481, 604, 484, 12, 34, "Text",ExpressionUUID->"d8975730-2141-4fa3-af71-bccb9636cc55"],
Cell[CellGroupData[{
Cell[24990, 620, 384, 9, 47, "Input",ExpressionUUID->"d3afd278-ef01-4432-b91c-5d43bf665cc3"],
Cell[25377, 631, 475, 11, 32, "Output",ExpressionUUID->"5abd324d-9958-4d9e-8ed8-48c77465dfab"]
}, Open  ]],
Cell[25867, 645, 291, 7, 34, "Text",ExpressionUUID->"41ff0604-6dfa-482f-9fc6-d865dddc9721"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26195, 657, 453, 8, 71, "Section",ExpressionUUID->"69c2789e-757d-42de-8e7a-aa67a7c35b9d"],
Cell[26651, 667, 584, 10, 57, "Text",ExpressionUUID->"31729641-3f35-4443-b72f-d245bff12cb9"],
Cell[CellGroupData[{
Cell[27260, 681, 1099, 26, 28, "Input",ExpressionUUID->"93ccc738-1113-4c67-a597-1ef0e5f729b4"],
Cell[28362, 709, 27303, 491, 61, "Output",ExpressionUUID->"2aad0b73-37c0-4362-bbda-d12b910a7883"]
}, Open  ]],
Cell[55680, 1203, 201, 3, 34, "Text",ExpressionUUID->"c7684253-f969-445d-b853-fb39ea017196"],
Cell[CellGroupData[{
Cell[55906, 1210, 6093, 151, 357, "Code",ExpressionUUID->"9d74c802-3edd-4422-96a2-61dbc4dc07fa"],
Cell[62002, 1363, 15046, 262, 495, "Output",ExpressionUUID->"5c52d711-dd95-48b1-a58e-4128f98264f2"]
}, {2}]],
Cell[77060, 1628, 729, 12, 57, "Text",ExpressionUUID->"0ed2d935-e8ff-4c05-9e95-1dd6631482fc"],
Cell[CellGroupData[{
Cell[77814, 1644, 3217, 75, 205, "Code",ExpressionUUID->"981e4d94-f4c6-4345-a8e1-1e189b41a696"],
Cell[81034, 1721, 3178, 61, 395, "Output",ExpressionUUID->"51b28f17-cd36-452d-b57e-797fa5a5822f"]
}, {2}]],
Cell[84224, 1785, 339, 7, 57, "Text",ExpressionUUID->"a99d3207-d7b5-4028-8568-3e7512a4472d"],
Cell[84566, 1794, 738, 13, 80, "Text",ExpressionUUID->"94f5ac8e-053b-41ee-8458-981bb29205af"],
Cell[CellGroupData[{
Cell[85329, 1811, 3516, 93, 224, "Code",ExpressionUUID->"58a9a218-b537-4a36-9207-8b822b18c84a"],
Cell[88848, 1906, 3316, 67, 491, "Output",ExpressionUUID->"ea18d167-154e-412a-b424-b61c12fc28ae"]
}, {2}]],
Cell[92176, 1976, 979, 15, 103, "Text",ExpressionUUID->"e582e8e9-3e7a-444a-8bb6-0db06d8d896a"],
Cell[CellGroupData[{
Cell[93180, 1995, 496, 9, 37, "Input",ExpressionUUID->"073f4716-03aa-4633-8499-ccddaeb0de14"],
Cell[93679, 2006, 64801, 1069, 447, "Output",ExpressionUUID->"f83d140f-6583-44d8-aadc-26e24493e284"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158529, 3081, 262, 4, 71, "Section",ExpressionUUID->"9da19663-7179-45c9-8160-ad35832309c2"],
Cell[158794, 3087, 597, 10, 57, "Text",ExpressionUUID->"45c45f6e-321c-4ce7-9657-950c1134d308"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159428, 3102, 171, 3, 71, "Section",ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-16569b36e665"],
Cell[159602, 3107, 210, 4, 34, "Text",ExpressionUUID->"44146aed-2d19-4c66-bfba-1e67f1c1dfb3"]
}, Open  ]]
}, Open  ]]
}
]
*)

